(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 13.2' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    123579,       2767]
NotebookOptionsPosition[     74753,       1873]
NotebookOutlinePosition[    121099,       2728]
CellTagsIndexPosition[    121056,       2725]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[
 RowBox[{"<<", 
  "\"\</Users/lucaarnaboldi/Desktop/staircase-ss/mathematica/Isserlis.m\>\""}]\
], "Input",
 CellChangeTimes->{{3.88917609433534*^9, 3.889176119919079*^9}, {
   3.889176311221629*^9, 3.8891763748276167`*^9}, 3.889176476202965*^9, {
   3.889176672392775*^9, 3.889176682503498*^9}, {3.890994311244248*^9, 
   3.89099431208451*^9}, {3.906106260046619*^9, 3.906106262513674*^9}, {
   3.9061094641499367`*^9, 3.9061094655734158`*^9}, 3.914303324866194*^9},
 CellLabel->"In[1]:=",ExpressionUUID->"07b03d69-e629-42fa-ba03-b0c8946b1bf4"],

Cell[CellGroupData[{

Cell[BoxData["Omega"], "Input",
 CellChangeTimes->{{3.906109467769216*^9, 3.906109468800918*^9}},
 CellLabel->"In[2]:=",ExpressionUUID->"6b03e492-9995-459c-b4c1-5cd4b89c307c"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\[Omega]", "[", 
      RowBox[{"1", ",", "1"}], "]"}], ",", 
     RowBox[{"\[Omega]", "[", 
      RowBox[{"1", ",", "2"}], "]"}], ",", 
     RowBox[{"\[Omega]", "[", 
      RowBox[{"1", ",", "3"}], "]"}], ",", 
     RowBox[{"\[Omega]", "[", 
      RowBox[{"1", ",", "4"}], "]"}], ",", 
     RowBox[{"\[Omega]", "[", 
      RowBox[{"1", ",", "5"}], "]"}], ",", 
     RowBox[{"\[Omega]", "[", 
      RowBox[{"1", ",", "6"}], "]"}], ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\[Omega]", "[", 
      RowBox[{"1", ",", "2"}], "]"}], ",", 
     RowBox[{"\[Omega]", "[", 
      RowBox[{"2", ",", "2"}], "]"}], ",", 
     RowBox[{"\[Omega]", "[", 
      RowBox[{"2", ",", "3"}], "]"}], ",", 
     RowBox[{"\[Omega]", "[", 
      RowBox[{"2", ",", "4"}], "]"}], ",", 
     RowBox[{"\[Omega]", "[", 
      RowBox[{"2", ",", "5"}], "]"}], ",", 
     RowBox[{"\[Omega]", "[", 
      RowBox[{"2", ",", "6"}], "]"}], ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\[Omega]", "[", 
      RowBox[{"1", ",", "3"}], "]"}], ",", 
     RowBox[{"\[Omega]", "[", 
      RowBox[{"2", ",", "3"}], "]"}], ",", 
     RowBox[{"\[Omega]", "[", 
      RowBox[{"3", ",", "3"}], "]"}], ",", 
     RowBox[{"\[Omega]", "[", 
      RowBox[{"3", ",", "4"}], "]"}], ",", 
     RowBox[{"\[Omega]", "[", 
      RowBox[{"3", ",", "5"}], "]"}], ",", 
     RowBox[{"\[Omega]", "[", 
      RowBox[{"3", ",", "6"}], "]"}], ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\[Omega]", "[", 
      RowBox[{"1", ",", "4"}], "]"}], ",", 
     RowBox[{"\[Omega]", "[", 
      RowBox[{"2", ",", "4"}], "]"}], ",", 
     RowBox[{"\[Omega]", "[", 
      RowBox[{"3", ",", "4"}], "]"}], ",", 
     RowBox[{"\[Omega]", "[", 
      RowBox[{"4", ",", "4"}], "]"}], ",", 
     RowBox[{"\[Omega]", "[", 
      RowBox[{"4", ",", "5"}], "]"}], ",", 
     RowBox[{"\[Omega]", "[", 
      RowBox[{"4", ",", "6"}], "]"}], ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\[Omega]", "[", 
      RowBox[{"1", ",", "5"}], "]"}], ",", 
     RowBox[{"\[Omega]", "[", 
      RowBox[{"2", ",", "5"}], "]"}], ",", 
     RowBox[{"\[Omega]", "[", 
      RowBox[{"3", ",", "5"}], "]"}], ",", 
     RowBox[{"\[Omega]", "[", 
      RowBox[{"4", ",", "5"}], "]"}], ",", 
     RowBox[{"\[Omega]", "[", 
      RowBox[{"5", ",", "5"}], "]"}], ",", 
     RowBox[{"\[Omega]", "[", 
      RowBox[{"5", ",", "6"}], "]"}], ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\[Omega]", "[", 
      RowBox[{"1", ",", "6"}], "]"}], ",", 
     RowBox[{"\[Omega]", "[", 
      RowBox[{"2", ",", "6"}], "]"}], ",", 
     RowBox[{"\[Omega]", "[", 
      RowBox[{"3", ",", "6"}], "]"}], ",", 
     RowBox[{"\[Omega]", "[", 
      RowBox[{"4", ",", "6"}], "]"}], ",", 
     RowBox[{"\[Omega]", "[", 
      RowBox[{"5", ",", "6"}], "]"}], ",", 
     RowBox[{"\[Omega]", "[", 
      RowBox[{"6", ",", "6"}], "]"}], ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
     "\[CapitalDelta]"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.906109470010832*^9, 3.9061094799272003`*^9}, {
   3.906109769638232*^9, 3.906109787153964*^9}, 3.906109894002713*^9, 
   3.9076713021372137`*^9, 3.907745708392392*^9, 3.907749207457515*^9, 
   3.907749399628682*^9, 3.907749504093479*^9, 3.907749574934574*^9, 
   3.907749680430149*^9, 3.907749717136916*^9, 3.907749867605147*^9, 
   3.9082663837344713`*^9, 3.908266430005948*^9, {3.908266692953964*^9, 
   3.908266721002474*^9}, 3.908266894122726*^9, 3.908267685538595*^9, 
   3.908267720753435*^9, 3.9082677559353333`*^9, 3.908268023271358*^9, {
   3.9082766120406*^9, 3.908276628961693*^9}, 3.9082776618532143`*^9, 
   3.908277763812562*^9, {3.908278249404375*^9, 3.908278263161714*^9}, 
   3.908278314453652*^9, 3.908966283937336*^9, 3.9089663394120903`*^9, 
   3.908966908270516*^9, 3.9089670225216312`*^9, 3.908967098198175*^9, 
   3.908967174435177*^9, 3.9089673828351727`*^9, 3.908967588581729*^9, {
   3.908967876868696*^9, 3.908967906273281*^9}, 3.908973969211576*^9, 
   3.9101730973810377`*^9, 3.910173524187935*^9, 3.9101735650843687`*^9, {
   3.910175616192566*^9, 3.910175635715819*^9}, {3.910176107720368*^9, 
   3.910176121821972*^9}, 3.910177210354705*^9, {3.910177498371141*^9, 
   3.910177513219675*^9}, 3.9101817301886*^9, {3.9104326318684072`*^9, 
   3.9104326604795313`*^9}, 3.91043272481992*^9, {3.910432811143269*^9, 
   3.9104328258465357`*^9}, 3.9143032508174953`*^9, {3.914303667826542*^9, 
   3.914303696119133*^9}, 3.9143045921174383`*^9, 3.914304694486383*^9, {
   3.9143055245678673`*^9, 3.914305549018077*^9}, {3.9143105927822742`*^9, 
   3.914310603496395*^9}, 3.9143106682729483`*^9, 3.914310735672964*^9, 
   3.914311073488253*^9, 3.914311117290077*^9, {3.914311289706826*^9, 
   3.9143113077295322`*^9}, 3.914313359119749*^9, {3.914315080409956*^9, 
   3.91431510851928*^9}, 3.914318325926956*^9, 3.914388539052805*^9, 
   3.914389084266172*^9, 3.9144729765269117`*^9, {3.914658221406272*^9, 
   3.914658234229272*^9}, 3.914659677490378*^9, 3.91493350045574*^9, 
   3.915469041441792*^9, 3.915530181891*^9, 3.916387961182892*^9, 
   3.916388007302301*^9, 3.9163881357371397`*^9, 3.916388558430879*^9, 
   3.9163886171136007`*^9, 3.917933285871006*^9, 3.917933629421245*^9, 
   3.923641552010586*^9},
 CellLabel->"Out[2]=",ExpressionUUID->"70845b86-4e7f-476a-9a96-851bac8c851f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"l", " ", "=", " ", "1"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"I2noise", " ", "=", " ", 
    RowBox[{
     RowBox[{
      RowBox[{"Expand", "[", "1", "]"}], "\[IndentingNewLine]", "I2"}], " ", 
     "=", " ", 
     RowBox[{
      RowBox[{
       RowBox[{"Expand", "[", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"lf", "[", "1", "]"}], ")"}], "*", 
         RowBox[{"(", 
          RowBox[{"lf", "[", "2", "]"}], ")"}]}], "]"}], 
       "\[IndentingNewLine]", "I3"}], " ", "=", " ", 
      RowBox[{
       RowBox[{
        RowBox[{"Expand", "[", 
         RowBox[{
          RowBox[{"(", "1", ")"}], "*", 
          RowBox[{"lf", "[", "2", "]"}], "*", 
          RowBox[{"(", 
           RowBox[{"lf", "[", "3", "]"}], ")"}]}], "]"}], 
        "\[IndentingNewLine]", "I4"}], " ", "=", " ", 
       RowBox[{"Expand", "[", 
        RowBox[{
         RowBox[{"(", "1", ")"}], "*", 
         RowBox[{"(", "1", ")"}], "*", 
         RowBox[{"(", 
          RowBox[{"lf", "[", "3", "]"}], ")"}], "*", 
         RowBox[{"(", 
          RowBox[{"lf", "[", "4", "]"}], ")"}]}], "]"}]}]}]}]}], "*)"}], 
  "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"l", "=", "2"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"I2noise", " ", "=", " ", 
    RowBox[{
     RowBox[{
      RowBox[{"Expand", "[", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"2", "*", 
          RowBox[{"lf", "[", "1", "]"}]}], ")"}], "*", 
        RowBox[{"(", 
         RowBox[{"2", "*", 
          RowBox[{"lf", "[", "2", "]"}]}], ")"}]}], "]"}], 
      "\[IndentingNewLine]", "I2"}], " ", "=", " ", 
     RowBox[{
      RowBox[{
       RowBox[{"Expand", "[", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"lf", "[", "1", "]"}], "^", "2"}], "-", "1"}], ")"}], "*", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"lf", "[", "2", "]"}], "^", "2"}], "-", "1"}], ")"}]}], 
        "]"}], "\[IndentingNewLine]", "I3"}], " ", "=", " ", 
      RowBox[{
       RowBox[{
        RowBox[{"Expand", "[", 
         RowBox[{"2", "*", 
          RowBox[{"lf", "[", "1", "]"}], "*", 
          RowBox[{"lf", "[", "2", "]"}], "*", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"lf", "[", "3", "]"}], "^", "2"}], "-", "1"}], ")"}]}], 
         "]"}], "\[IndentingNewLine]", "I4"}], " ", "=", " ", 
       RowBox[{"Expand", "[", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"2", "*", 
           RowBox[{"lf", "[", "1", "]"}]}], ")"}], "*", 
         RowBox[{"(", 
          RowBox[{"2", "*", 
           RowBox[{"lf", "[", "2", "]"}]}], ")"}], "*", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"lf", "[", "3", "]"}], "^", "2"}], "-", "1"}], ")"}], "*", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"lf", "[", "4", "]"}], "^", "2"}], "-", "1"}], ")"}]}], 
        "]"}]}]}]}]}], "*)"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"l", "=", "3"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"I2noise", " ", "=", " ", 
    RowBox[{"Expand", "[", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"3", "*", 
         RowBox[{
          RowBox[{"lf", "[", "1", "]"}], "^", "2"}]}], "-", "3"}], ")"}], "*", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"3", "*", 
         RowBox[{
          RowBox[{"lf", "[", "2", "]"}], "^", "2"}]}], "-", "3"}], ")"}]}], 
     "]"}]}], "\[IndentingNewLine]", 
   RowBox[{"I2", " ", "=", " ", 
    RowBox[{"Expand", "[", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"lf", "[", "1", "]"}], "^", "3"}], "-", 
        RowBox[{"3", "*", 
         RowBox[{"lf", "[", "1", "]"}]}]}], ")"}], "*", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"lf", "[", "2", "]"}], "^", "3"}], "-", 
        RowBox[{"3", "*", 
         RowBox[{"lf", "[", "2", "]"}]}]}], ")"}]}], "]"}]}], 
   "\[IndentingNewLine]", 
   RowBox[{"I3", " ", "=", " ", 
    RowBox[{"Expand", "[", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"3", "*", 
         RowBox[{
          RowBox[{"lf", "[", "1", "]"}], "^", "2"}]}], "-", "3"}], ")"}], "*", 
      RowBox[{"lf", "[", "2", "]"}], "*", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"lf", "[", "3", "]"}], "^", "3"}], "-", 
        RowBox[{"3", "*", 
         RowBox[{"lf", "[", "3", "]"}]}]}], ")"}]}], "]"}]}], 
   "\[IndentingNewLine]", 
   RowBox[{"I4", " ", "=", " ", 
    RowBox[{"Expand", "[", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"3", "*", 
         RowBox[{
          RowBox[{"lf", "[", "1", "]"}], "^", "2"}]}], "-", "3"}], ")"}], "*", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"3", "*", 
         RowBox[{
          RowBox[{"lf", "[", "2", "]"}], "^", "2"}]}], "-", "3"}], ")"}], "*", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"lf", "[", "3", "]"}], "^", "3"}], "-", 
        RowBox[{"3", "*", 
         RowBox[{"lf", "[", "3", "]"}]}]}], ")"}], "*", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"lf", "[", "4", "]"}], "^", "3"}], "-", 
        RowBox[{"3", "*", 
         RowBox[{"lf", "[", "4", "]"}]}]}], ")"}]}], "]"}]}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"l", "=", "4"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"I2noise", " ", "=", " ", 
     RowBox[{
      RowBox[{
       RowBox[{"Expand", "[", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"4", "*", 
            RowBox[{
             RowBox[{"lf", "[", "1", "]"}], "^", "3"}]}], "-", 
           RowBox[{"12", "*", 
            RowBox[{"lf", "[", "1", "]"}]}]}], ")"}], "*", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"4", "*", 
            RowBox[{
             RowBox[{"lf", "[", "2", "]"}], "^", "3"}]}], "-", 
           RowBox[{"12", "*", 
            RowBox[{"lf", "[", "2", "]"}]}]}], ")"}]}], "]"}], 
       "\[IndentingNewLine]", "I2"}], "=", 
      RowBox[{
       RowBox[{
        RowBox[{"Expand", "[", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"lf", "[", "1", "]"}], "^", "4"}], "-", 
            RowBox[{"6", "*", 
             RowBox[{
              RowBox[{"lf", "[", "1", "]"}], "^", "2"}]}], "+", "3"}], ")"}], 
          "*", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"lf", "[", "2", "]"}], "^", "4"}], "-", 
            RowBox[{"6", "*", 
             RowBox[{
              RowBox[{"lf", "[", "2", "]"}], "^", "2"}]}], "+", "3"}], 
           ")"}]}], "]"}], "\[IndentingNewLine]", "I3"}], " ", "=", " ", 
       RowBox[{
        RowBox[{
         RowBox[{"Expand", "[", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"4", "*", 
              RowBox[{
               RowBox[{"lf", "[", "1", "]"}], "^", "3"}]}], "-", 
             RowBox[{"12", "*", 
              RowBox[{"lf", "[", "1", "]"}]}]}], ")"}], "*", 
           RowBox[{"lf", "[", "2", "]"}], "*", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"lf", "[", "3", "]"}], "^", "4"}], "-", 
             RowBox[{"6", "*", 
              RowBox[{
               RowBox[{"lf", "[", "3", "]"}], "^", "2"}]}], "+", "3"}], 
            ")"}]}], "]"}], "\[IndentingNewLine]", "I4"}], " ", "=", " ", 
        RowBox[{"Expand", "[", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"4", "*", 
             RowBox[{
              RowBox[{"lf", "[", "1", "]"}], "^", "3"}]}], "-", 
            RowBox[{"12", "*", 
             RowBox[{"lf", "[", "1", "]"}]}]}], ")"}], "*", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"4", "*", 
             RowBox[{
              RowBox[{"lf", "[", "2", "]"}], "^", "3"}]}], "-", 
            RowBox[{"12", "*", 
             RowBox[{"lf", "[", "2", "]"}]}]}], ")"}], "*", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"lf", "[", "3", "]"}], "^", "4"}], "-", 
            RowBox[{"6", "*", 
             RowBox[{
              RowBox[{"lf", "[", "3", "]"}], "^", "2"}]}], "+", "3"}], ")"}], 
          "*", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"lf", "[", "4", "]"}], "^", "4"}], "-", 
            RowBox[{"6", "*", 
             RowBox[{
              RowBox[{"lf", "[", "4", "]"}], "^", "2"}]}], "+", "3"}], 
           ")"}]}], "]"}]}]}]}]}], "*)"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"l", "=", "5"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"I3", " ", "=", " ", 
     RowBox[{"Expand", "[", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"5", "*", 
          RowBox[{
           RowBox[{"lf", "[", "1", "]"}], "^", "4"}]}], "-", 
         RowBox[{"30", "*", 
          RowBox[{
           RowBox[{"lf", "[", "1", "]"}], "^", "2"}]}], "+", "15"}], ")"}], 
       "*", 
       RowBox[{"lf", "[", "2", "]"}], "*", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"lf", "[", "3", "]"}], "^", "5"}], "-", 
         RowBox[{"10", "*", 
          RowBox[{
           RowBox[{"lf", "[", "3", "]"}], "^", "3"}]}], "+", 
         RowBox[{"15", "*", 
          RowBox[{"lf", "[", "3", "]"}]}]}], ")"}]}], "]"}]}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"I4", " ", "=", " ", 
     RowBox[{"Expand", "[", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"5", "*", 
          RowBox[{
           RowBox[{"lf", "[", "1", "]"}], "^", "4"}]}], "-", 
         RowBox[{"30", "*", 
          RowBox[{
           RowBox[{"lf", "[", "1", "]"}], "^", "2"}]}], "+", "15"}], ")"}], 
       "*", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"5", "*", 
          RowBox[{
           RowBox[{"lf", "[", "2", "]"}], "^", "4"}]}], "-", 
         RowBox[{"30", "*", 
          RowBox[{
           RowBox[{"lf", "[", "2", "]"}], "^", "2"}]}], "+", "15"}], ")"}], 
       "*", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"lf", "[", "3", "]"}], "^", "5"}], "-", 
         RowBox[{"10", "*", 
          RowBox[{
           RowBox[{"lf", "[", "3", "]"}], "^", "3"}]}], "+", 
         RowBox[{"15", "*", 
          RowBox[{"lf", "[", "3", "]"}]}]}], ")"}], "*", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"lf", "[", "4", "]"}], "^", "5"}], "-", 
         RowBox[{"10", "*", 
          RowBox[{
           RowBox[{"lf", "[", "4", "]"}], "^", "3"}]}], "+", 
         RowBox[{"15", "*", 
          RowBox[{"lf", "[", "4", "]"}]}]}], ")"}]}], "]"}]}], "*)"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"l", "=", "6"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"I3", " ", "=", " ", 
     RowBox[{"Expand", "[", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"6", "*", 
          RowBox[{
           RowBox[{"lf", "[", "1", "]"}], "^", "5"}]}], "-", 
         RowBox[{"60", "*", 
          RowBox[{
           RowBox[{"lf", "[", "1", "]"}], "^", "3"}]}], "+", 
         RowBox[{"90", "*", 
          RowBox[{"lf", "[", "1", "]"}]}]}], ")"}], "*", 
       RowBox[{"lf", "[", "2", "]"}], "*", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"lf", "[", "3", "]"}], "^", "6"}], "-", 
         RowBox[{"15", "*", 
          RowBox[{
           RowBox[{"lf", "[", "3", "]"}], "^", "4"}]}], "+", 
         RowBox[{"45", "*", 
          RowBox[{
           RowBox[{"lf", "[", "3", "]"}], "^", "2"}]}], "-", "15"}], ")"}]}], 
      "]"}]}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"I4", " ", "=", " ", 
     RowBox[{"Expand", "[", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"6", "*", 
          RowBox[{
           RowBox[{"lf", "[", "1", "]"}], "^", "5"}]}], "-", 
         RowBox[{"60", "*", 
          RowBox[{
           RowBox[{"lf", "[", "1", "]"}], "^", "3"}]}], "+", 
         RowBox[{"90", "*", 
          RowBox[{"lf", "[", "1", "]"}]}]}], ")"}], "*", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"6", "*", 
          RowBox[{
           RowBox[{"lf", "[", "2", "]"}], "^", "5"}]}], "-", 
         RowBox[{"60", "*", 
          RowBox[{
           RowBox[{"lf", "[", "2", "]"}], "^", "3"}]}], "+", 
         RowBox[{"90", "*", 
          RowBox[{"lf", "[", "2", "]"}]}]}], ")"}], "*", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"lf", "[", "3", "]"}], "^", "6"}], "-", 
         RowBox[{"15", "*", 
          RowBox[{
           RowBox[{"lf", "[", "3", "]"}], "^", "4"}]}], "+", 
         RowBox[{"45", "*", 
          RowBox[{
           RowBox[{"lf", "[", "3", "]"}], "^", "2"}]}], "-", "15"}], ")"}], 
       "*", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"lf", "[", "4", "]"}], "^", "6"}], "-", 
         RowBox[{"15", "*", 
          RowBox[{
           RowBox[{"lf", "[", "4", "]"}], "^", "4"}]}], "+", 
         RowBox[{"45", "*", 
          RowBox[{
           RowBox[{"lf", "[", "4", "]"}], "^", "2"}]}], "-", "15"}], ")"}]}], 
      "]"}]}], "*)"}]}]}]], "Input",
 CellChangeTimes->{{3.90610581643575*^9, 3.9061058859481583`*^9}, {
   3.906106474094995*^9, 3.906106532362823*^9}, {3.9061066069904337`*^9, 
   3.906106615382628*^9}, {3.9061066750808268`*^9, 3.906106712009593*^9}, {
   3.906115106839115*^9, 3.906115122709948*^9}, {3.907745657851212*^9, 
   3.907745704584968*^9}, {3.907749117910213*^9, 3.907749201638482*^9}, {
   3.9077492846421947`*^9, 3.907749395631675*^9}, {3.907749463532156*^9, 
   3.907749567398479*^9}, {3.90774966156633*^9, 3.907749665341361*^9}, {
   3.907749788183622*^9, 3.9077498638018923`*^9}, {3.908266683682056*^9, 
   3.908266687621731*^9}, {3.908267597227324*^9, 3.908267610424596*^9}, {
   3.908267649381763*^9, 3.908267717109837*^9}, {3.908276469596464*^9, 
   3.9082764823283367`*^9}, {3.9082765503105497`*^9, 
   3.9082766261431417`*^9}, {3.90827760161267*^9, 3.90827765811966*^9}, {
   3.908277754167019*^9, 3.908277760578492*^9}, {3.9082781934978228`*^9, 
   3.908278260069944*^9}, 3.9082783409216833`*^9, {3.908966315631646*^9, 
   3.908966335740967*^9}, {3.9089668899534063`*^9, 3.908966903385786*^9}, {
   3.908967003376378*^9, 3.908967017594686*^9}, {3.908967078296946*^9, 
   3.908967170564126*^9}, {3.908967230305645*^9, 3.908967374339464*^9}, {
   3.908967543494525*^9, 3.908967558592546*^9}, {3.90896785160744*^9, 
   3.9089679032570467`*^9}, {3.908973937589469*^9, 3.9089739546369*^9}, {
   3.910173373000901*^9, 3.910173420819803*^9}, {3.910173480081517*^9, 
   3.910173538797153*^9}, {3.9101755863956003`*^9, 3.910175602387993*^9}, {
   3.910177181842781*^9, 3.910177194474375*^9}, {3.910177454003541*^9, 
   3.910177491399323*^9}, {3.910181698187571*^9, 3.910181718697147*^9}, {
   3.9102442609703608`*^9, 3.910244281617621*^9}, {3.9104326008984537`*^9, 
   3.910432657434931*^9}, {3.910432772698855*^9, 3.9104328066270437`*^9}, {
   3.9143033335418253`*^9, 3.91430335401856*^9}, {3.914303518398829*^9, 
   3.914303545905094*^9}, {3.9143035943185663`*^9, 3.914303662126877*^9}, {
   3.914304643785157*^9, 3.91430469069508*^9}, {3.914311028016672*^9, 
   3.914311044392208*^9}, {3.914311098399727*^9, 3.914311113200554*^9}, {
   3.914311151926106*^9, 3.91431117073911*^9}, {3.914313336427166*^9, 
   3.914313355176724*^9}, {3.9143183054334793`*^9, 3.914318321450137*^9}, {
   3.914388503644341*^9, 3.9143885328534613`*^9}, {3.91438875307837*^9, 
   3.9143890799154253`*^9}, 3.914658137418548*^9, 3.91465823121216*^9, {
   3.91465965576378*^9, 3.914659662655932*^9}, {3.9155301724019747`*^9, 
   3.915530178516636*^9}, {3.916388126638877*^9, 3.916388130582589*^9}, {
   3.916388545140662*^9, 3.9163885518716497`*^9}, {3.916388606159663*^9, 
   3.9163886131155787`*^9}, {3.9179332707246637`*^9, 3.917933274745009*^9}},
 CellLabel->"In[3]:=",ExpressionUUID->"a01ba991-b15d-482b-b8ef-b6cf8e12977a"],

Cell[BoxData[
 RowBox[{"9", "-", 
  RowBox[{"9", " ", 
   SuperscriptBox[
    RowBox[{"\[Lambda]", "[", "1", "]"}], "2"]}], "-", 
  RowBox[{"9", " ", 
   SuperscriptBox[
    RowBox[{"\[Lambda]", "[", "2", "]"}], "2"]}], "+", 
  RowBox[{"9", " ", 
   SuperscriptBox[
    RowBox[{"\[Lambda]", "[", "1", "]"}], "2"], " ", 
   SuperscriptBox[
    RowBox[{"\[Lambda]", "[", "2", "]"}], "2"]}]}]], "Output",
 CellChangeTimes->{3.914658234234058*^9, 3.914659677509041*^9, 
  3.91493350045947*^9, 3.91546904144693*^9, 3.915530181897092*^9, 
  3.91638796119919*^9, 3.916388007320691*^9, 3.9163881357420053`*^9, 
  3.9163885584376907`*^9, 3.916388617130773*^9, 3.917933285889585*^9, 
  3.917933629427927*^9, 3.9236415520267076`*^9},
 CellLabel->"Out[3]=",ExpressionUUID->"489508d7-05fa-4f69-ab5f-a48694c6df2d"],

Cell[BoxData[
 RowBox[{
  RowBox[{"9", " ", 
   RowBox[{"\[Lambda]", "[", "1", "]"}], " ", 
   RowBox[{"\[Lambda]", "[", "2", "]"}]}], "-", 
  RowBox[{"3", " ", 
   SuperscriptBox[
    RowBox[{"\[Lambda]", "[", "1", "]"}], "3"], " ", 
   RowBox[{"\[Lambda]", "[", "2", "]"}]}], "-", 
  RowBox[{"3", " ", 
   RowBox[{"\[Lambda]", "[", "1", "]"}], " ", 
   SuperscriptBox[
    RowBox[{"\[Lambda]", "[", "2", "]"}], "3"]}], "+", 
  RowBox[{
   SuperscriptBox[
    RowBox[{"\[Lambda]", "[", "1", "]"}], "3"], " ", 
   SuperscriptBox[
    RowBox[{"\[Lambda]", "[", "2", "]"}], "3"]}]}]], "Output",
 CellChangeTimes->{3.914658234234058*^9, 3.914659677509041*^9, 
  3.91493350045947*^9, 3.91546904144693*^9, 3.915530181897092*^9, 
  3.91638796119919*^9, 3.916388007320691*^9, 3.9163881357420053`*^9, 
  3.9163885584376907`*^9, 3.916388617130773*^9, 3.917933285889585*^9, 
  3.917933629427927*^9, 3.9236415520276012`*^9},
 CellLabel->"Out[4]=",ExpressionUUID->"b4bfdcd3-7cad-4650-9282-fd8e41372bca"],

Cell[BoxData[
 RowBox[{
  RowBox[{"9", " ", 
   RowBox[{"\[Lambda]", "[", "2", "]"}], " ", 
   RowBox[{"\[Lambda]", "[", "3", "]"}]}], "-", 
  RowBox[{"9", " ", 
   SuperscriptBox[
    RowBox[{"\[Lambda]", "[", "1", "]"}], "2"], " ", 
   RowBox[{"\[Lambda]", "[", "2", "]"}], " ", 
   RowBox[{"\[Lambda]", "[", "3", "]"}]}], "-", 
  RowBox[{"3", " ", 
   RowBox[{"\[Lambda]", "[", "2", "]"}], " ", 
   SuperscriptBox[
    RowBox[{"\[Lambda]", "[", "3", "]"}], "3"]}], "+", 
  RowBox[{"3", " ", 
   SuperscriptBox[
    RowBox[{"\[Lambda]", "[", "1", "]"}], "2"], " ", 
   RowBox[{"\[Lambda]", "[", "2", "]"}], " ", 
   SuperscriptBox[
    RowBox[{"\[Lambda]", "[", "3", "]"}], "3"]}]}]], "Output",
 CellChangeTimes->{3.914658234234058*^9, 3.914659677509041*^9, 
  3.91493350045947*^9, 3.91546904144693*^9, 3.915530181897092*^9, 
  3.91638796119919*^9, 3.916388007320691*^9, 3.9163881357420053`*^9, 
  3.9163885584376907`*^9, 3.916388617130773*^9, 3.917933285889585*^9, 
  3.917933629427927*^9, 3.923641552028512*^9},
 CellLabel->"Out[5]=",ExpressionUUID->"152eba67-17a4-4b3d-8160-da83ba5c673a"],

Cell[BoxData[
 RowBox[{
  RowBox[{"81", " ", 
   RowBox[{"\[Lambda]", "[", "3", "]"}], " ", 
   RowBox[{"\[Lambda]", "[", "4", "]"}]}], "-", 
  RowBox[{"81", " ", 
   SuperscriptBox[
    RowBox[{"\[Lambda]", "[", "1", "]"}], "2"], " ", 
   RowBox[{"\[Lambda]", "[", "3", "]"}], " ", 
   RowBox[{"\[Lambda]", "[", "4", "]"}]}], "-", 
  RowBox[{"81", " ", 
   SuperscriptBox[
    RowBox[{"\[Lambda]", "[", "2", "]"}], "2"], " ", 
   RowBox[{"\[Lambda]", "[", "3", "]"}], " ", 
   RowBox[{"\[Lambda]", "[", "4", "]"}]}], "+", 
  RowBox[{"81", " ", 
   SuperscriptBox[
    RowBox[{"\[Lambda]", "[", "1", "]"}], "2"], " ", 
   SuperscriptBox[
    RowBox[{"\[Lambda]", "[", "2", "]"}], "2"], " ", 
   RowBox[{"\[Lambda]", "[", "3", "]"}], " ", 
   RowBox[{"\[Lambda]", "[", "4", "]"}]}], "-", 
  RowBox[{"27", " ", 
   SuperscriptBox[
    RowBox[{"\[Lambda]", "[", "3", "]"}], "3"], " ", 
   RowBox[{"\[Lambda]", "[", "4", "]"}]}], "+", 
  RowBox[{"27", " ", 
   SuperscriptBox[
    RowBox[{"\[Lambda]", "[", "1", "]"}], "2"], " ", 
   SuperscriptBox[
    RowBox[{"\[Lambda]", "[", "3", "]"}], "3"], " ", 
   RowBox[{"\[Lambda]", "[", "4", "]"}]}], "+", 
  RowBox[{"27", " ", 
   SuperscriptBox[
    RowBox[{"\[Lambda]", "[", "2", "]"}], "2"], " ", 
   SuperscriptBox[
    RowBox[{"\[Lambda]", "[", "3", "]"}], "3"], " ", 
   RowBox[{"\[Lambda]", "[", "4", "]"}]}], "-", 
  RowBox[{"27", " ", 
   SuperscriptBox[
    RowBox[{"\[Lambda]", "[", "1", "]"}], "2"], " ", 
   SuperscriptBox[
    RowBox[{"\[Lambda]", "[", "2", "]"}], "2"], " ", 
   SuperscriptBox[
    RowBox[{"\[Lambda]", "[", "3", "]"}], "3"], " ", 
   RowBox[{"\[Lambda]", "[", "4", "]"}]}], "-", 
  RowBox[{"27", " ", 
   RowBox[{"\[Lambda]", "[", "3", "]"}], " ", 
   SuperscriptBox[
    RowBox[{"\[Lambda]", "[", "4", "]"}], "3"]}], "+", 
  RowBox[{"27", " ", 
   SuperscriptBox[
    RowBox[{"\[Lambda]", "[", "1", "]"}], "2"], " ", 
   RowBox[{"\[Lambda]", "[", "3", "]"}], " ", 
   SuperscriptBox[
    RowBox[{"\[Lambda]", "[", "4", "]"}], "3"]}], "+", 
  RowBox[{"27", " ", 
   SuperscriptBox[
    RowBox[{"\[Lambda]", "[", "2", "]"}], "2"], " ", 
   RowBox[{"\[Lambda]", "[", "3", "]"}], " ", 
   SuperscriptBox[
    RowBox[{"\[Lambda]", "[", "4", "]"}], "3"]}], "-", 
  RowBox[{"27", " ", 
   SuperscriptBox[
    RowBox[{"\[Lambda]", "[", "1", "]"}], "2"], " ", 
   SuperscriptBox[
    RowBox[{"\[Lambda]", "[", "2", "]"}], "2"], " ", 
   RowBox[{"\[Lambda]", "[", "3", "]"}], " ", 
   SuperscriptBox[
    RowBox[{"\[Lambda]", "[", "4", "]"}], "3"]}], "+", 
  RowBox[{"9", " ", 
   SuperscriptBox[
    RowBox[{"\[Lambda]", "[", "3", "]"}], "3"], " ", 
   SuperscriptBox[
    RowBox[{"\[Lambda]", "[", "4", "]"}], "3"]}], "-", 
  RowBox[{"9", " ", 
   SuperscriptBox[
    RowBox[{"\[Lambda]", "[", "1", "]"}], "2"], " ", 
   SuperscriptBox[
    RowBox[{"\[Lambda]", "[", "3", "]"}], "3"], " ", 
   SuperscriptBox[
    RowBox[{"\[Lambda]", "[", "4", "]"}], "3"]}], "-", 
  RowBox[{"9", " ", 
   SuperscriptBox[
    RowBox[{"\[Lambda]", "[", "2", "]"}], "2"], " ", 
   SuperscriptBox[
    RowBox[{"\[Lambda]", "[", "3", "]"}], "3"], " ", 
   SuperscriptBox[
    RowBox[{"\[Lambda]", "[", "4", "]"}], "3"]}], "+", 
  RowBox[{"9", " ", 
   SuperscriptBox[
    RowBox[{"\[Lambda]", "[", "1", "]"}], "2"], " ", 
   SuperscriptBox[
    RowBox[{"\[Lambda]", "[", "2", "]"}], "2"], " ", 
   SuperscriptBox[
    RowBox[{"\[Lambda]", "[", "3", "]"}], "3"], " ", 
   SuperscriptBox[
    RowBox[{"\[Lambda]", "[", "4", "]"}], "3"]}]}]], "Output",
 CellChangeTimes->{3.914658234234058*^9, 3.914659677509041*^9, 
  3.91493350045947*^9, 3.91546904144693*^9, 3.915530181897092*^9, 
  3.91638796119919*^9, 3.916388007320691*^9, 3.9163881357420053`*^9, 
  3.9163885584376907`*^9, 3.916388617130773*^9, 3.917933285889585*^9, 
  3.917933629427927*^9, 3.9236415520295887`*^9},
 CellLabel->"Out[6]=",ExpressionUUID->"65122ed1-fa10-4361-8943-a6c9eaf9c94c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Psit", " ", "=", 
   RowBox[{
    RowBox[{"IsserlisTheorem", "[", "I3", "]"}], " ", "/.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{"\[Omega]", "[", 
        RowBox[{"1", ",", "1"}], "]"}], "->", "q"}], ",", " ", 
      RowBox[{
       RowBox[{"\[Omega]", "[", 
        RowBox[{"1", ",", "2"}], "]"}], "->", "m"}], ",", " ", 
      RowBox[{
       RowBox[{"\[Omega]", "[", 
        RowBox[{"1", ",", "3"}], "]"}], "->", "m"}], ",", 
      RowBox[{
       RowBox[{"\[Omega]", "[", 
        RowBox[{"2", ",", "2"}], "]"}], "->", "\[Rho]"}], ",", 
      RowBox[{
       RowBox[{"\[Omega]", "[", 
        RowBox[{"2", ",", "3"}], "]"}], "->", "\[Rho]"}], ",", 
      RowBox[{
       RowBox[{"\[Omega]", "[", 
        RowBox[{"3", ",", "3"}], "]"}], "->", "\[Rho]"}]}], "}"}]}]}], " ", 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Psis", "=", " ", 
    RowBox[{
     RowBox[{"IsserlisTheorem", "[", "I3", "]"}], " ", "/.", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"\[Omega]", "[", 
         RowBox[{"1", ",", "1"}], "]"}], "->", "q"}], ",", " ", 
       RowBox[{
        RowBox[{"\[Omega]", "[", 
         RowBox[{"1", ",", "2"}], "]"}], "->", "m"}], ",", " ", 
       RowBox[{
        RowBox[{"\[Omega]", "[", 
         RowBox[{"1", ",", "3"}], "]"}], "->", "q"}], ",", 
       RowBox[{
        RowBox[{"\[Omega]", "[", 
         RowBox[{"2", ",", "2"}], "]"}], "->", "\[Rho]"}], ",", 
       RowBox[{
        RowBox[{"\[Omega]", "[", 
         RowBox[{"2", ",", "3"}], "]"}], "->", "m"}], ",", 
       RowBox[{
        RowBox[{"\[Omega]", "[", 
         RowBox[{"3", ",", "3"}], "]"}], "->", "q"}]}], "}"}]}]}], " ", ";"}],
   "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"Psis", " ", "=", " ", "0"}], ";"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"PhiHDtt", " ", "=", " ", 
   RowBox[{
    RowBox[{"IsserlisTheorem", "[", "I4", "]"}], " ", "/.", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{"\[Omega]", "[", 
        RowBox[{"1", ",", "1"}], "]"}], "->", "q"}], ",", " ", 
      RowBox[{
       RowBox[{"\[Omega]", "[", 
        RowBox[{"1", ",", "2"}], "]"}], "->", "q"}], ",", " ", 
      RowBox[{
       RowBox[{"\[Omega]", "[", 
        RowBox[{"1", ",", "3"}], "]"}], "->", "m"}], ",", 
      RowBox[{
       RowBox[{"\[Omega]", "[", 
        RowBox[{"1", ",", "4"}], "]"}], "->", "m"}], ",", 
      RowBox[{
       RowBox[{"\[Omega]", "[", 
        RowBox[{"2", ",", "2"}], "]"}], "->", "q"}], ",", 
      RowBox[{
       RowBox[{"\[Omega]", "[", 
        RowBox[{"2", ",", "3"}], "]"}], "->", "m"}], ",", 
      RowBox[{
       RowBox[{"\[Omega]", "[", 
        RowBox[{"2", ",", "4"}], "]"}], "->", "m"}], ",", 
      RowBox[{
       RowBox[{"\[Omega]", "[", 
        RowBox[{"3", ",", "3"}], "]"}], "->", "\[Rho]"}], ",", 
      RowBox[{
       RowBox[{"\[Omega]", "[", 
        RowBox[{"3", ",", "4"}], "]"}], "->", "\[Rho]"}], ",", 
      RowBox[{
       RowBox[{"\[Omega]", "[", 
        RowBox[{"4", ",", "4"}], "]"}], "->", "\[Rho]"}]}], "}"}]}]}], " ", 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"PhiHDss", " ", "=", " ", 
    RowBox[{
     RowBox[{"IsserlisTheorem", "[", "I4", "]"}], " ", "/.", " ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"\[Omega]", "[", 
         RowBox[{"1", ",", "1"}], "]"}], "->", "q"}], ",", " ", 
       RowBox[{
        RowBox[{"\[Omega]", "[", 
         RowBox[{"1", ",", "2"}], "]"}], "->", "q"}], ",", " ", 
       RowBox[{
        RowBox[{"\[Omega]", "[", 
         RowBox[{"1", ",", "3"}], "]"}], "->", "q"}], ",", 
       RowBox[{
        RowBox[{"\[Omega]", "[", 
         RowBox[{"1", ",", "4"}], "]"}], "->", "q"}], ",", 
       RowBox[{
        RowBox[{"\[Omega]", "[", 
         RowBox[{"2", ",", "2"}], "]"}], "->", "q"}], ",", 
       RowBox[{
        RowBox[{"\[Omega]", "[", 
         RowBox[{"2", ",", "3"}], "]"}], "->", "q"}], ",", 
       RowBox[{
        RowBox[{"\[Omega]", "[", 
         RowBox[{"2", ",", "4"}], "]"}], "->", "q"}], ",", 
       RowBox[{
        RowBox[{"\[Omega]", "[", 
         RowBox[{"3", ",", "3"}], "]"}], "->", "q"}], ",", 
       RowBox[{
        RowBox[{"\[Omega]", "[", 
         RowBox[{"3", ",", "4"}], "]"}], "->", "q"}], ",", 
       RowBox[{
        RowBox[{"\[Omega]", "[", 
         RowBox[{"4", ",", "4"}], "]"}], "->", "q"}]}], "}"}]}]}], " ", ";"}],
   "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"PhiHDss", " ", "=", " ", "0"}], ";"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"PhiHDts", " ", "=", " ", 
    RowBox[{
     RowBox[{"IsserlisTheorem", "[", "I4", "]"}], " ", "/.", " ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"\[Omega]", "[", 
         RowBox[{"1", ",", "1"}], "]"}], "->", "q"}], ",", " ", 
       RowBox[{
        RowBox[{"\[Omega]", "[", 
         RowBox[{"1", ",", "2"}], "]"}], "->", "q"}], ",", " ", 
       RowBox[{
        RowBox[{"\[Omega]", "[", 
         RowBox[{"1", ",", "3"}], "]"}], "->", "q"}], ",", 
       RowBox[{
        RowBox[{"\[Omega]", "[", 
         RowBox[{"1", ",", "4"}], "]"}], "->", "m"}], ",", 
       RowBox[{
        RowBox[{"\[Omega]", "[", 
         RowBox[{"2", ",", "2"}], "]"}], "->", "q"}], ",", 
       RowBox[{
        RowBox[{"\[Omega]", "[", 
         RowBox[{"2", ",", "3"}], "]"}], "->", "q"}], ",", 
       RowBox[{
        RowBox[{"\[Omega]", "[", 
         RowBox[{"2", ",", "4"}], "]"}], "->", "m"}], ",", 
       RowBox[{
        RowBox[{"\[Omega]", "[", 
         RowBox[{"3", ",", "3"}], "]"}], "->", "q"}], ",", 
       RowBox[{
        RowBox[{"\[Omega]", "[", 
         RowBox[{"3", ",", "4"}], "]"}], "->", "m"}], ",", 
       RowBox[{
        RowBox[{"\[Omega]", "[", 
         RowBox[{"4", ",", "4"}], "]"}], "->", "\[Rho]"}]}], "}"}]}]}], " ", 
   ";"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"PhiHDts", " ", "=", " ", "0"}], ";"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"PhiHDnoise", " ", "=", " ", 
   RowBox[{
    RowBox[{"IsserlisTheorem", "[", "I2noise", "]"}], " ", "/.", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{"\[Omega]", "[", 
        RowBox[{"1", ",", "1"}], "]"}], "->", "q"}], ",", 
      RowBox[{
       RowBox[{"\[Omega]", "[", 
        RowBox[{"1", ",", "2"}], "]"}], "->", "m"}], ",", 
      RowBox[{
       RowBox[{"\[Omega]", "[", 
        RowBox[{"2", ",", "2"}], "]"}], "->", "\[Rho]"}]}], "}"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"PhiGFt", " ", "=", 
   RowBox[{
    RowBox[{"IsserlisTheorem", "[", "I3", "]"}], " ", "/.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{"\[Omega]", "[", 
        RowBox[{"1", ",", "1"}], "]"}], "->", "q"}], ",", " ", 
      RowBox[{
       RowBox[{"\[Omega]", "[", 
        RowBox[{"1", ",", "2"}], "]"}], "->", "q"}], ",", " ", 
      RowBox[{
       RowBox[{"\[Omega]", "[", 
        RowBox[{"1", ",", "3"}], "]"}], "->", "m"}], ",", 
      RowBox[{
       RowBox[{"\[Omega]", "[", 
        RowBox[{"2", ",", "2"}], "]"}], "->", "q"}], ",", 
      RowBox[{
       RowBox[{"\[Omega]", "[", 
        RowBox[{"2", ",", "3"}], "]"}], "->", "m"}], ",", 
      RowBox[{
       RowBox[{"\[Omega]", "[", 
        RowBox[{"3", ",", "3"}], "]"}], "->", "\[Rho]"}]}], "}"}]}]}], " ", 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"PhiGFs", "=", " ", 
    RowBox[{
     RowBox[{"IsserlisTheorem", "[", "I3", "]"}], " ", "/.", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"\[Omega]", "[", 
         RowBox[{"1", ",", "1"}], "]"}], "->", "q"}], ",", " ", 
       RowBox[{
        RowBox[{"\[Omega]", "[", 
         RowBox[{"1", ",", "2"}], "]"}], "->", "q"}], ",", " ", 
       RowBox[{
        RowBox[{"\[Omega]", "[", 
         RowBox[{"1", ",", "3"}], "]"}], "->", "q"}], ",", 
       RowBox[{
        RowBox[{"\[Omega]", "[", 
         RowBox[{"2", ",", "2"}], "]"}], "->", "q"}], ",", 
       RowBox[{
        RowBox[{"\[Omega]", "[", 
         RowBox[{"2", ",", "3"}], "]"}], "->", "q"}], ",", 
       RowBox[{
        RowBox[{"\[Omega]", "[", 
         RowBox[{"3", ",", "3"}], "]"}], "->", "q"}]}], "}"}]}]}], " ", ";"}],
   "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"PhiGFs", "=", "0"}], ";"}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Riskss", " ", "=", 
    RowBox[{
     RowBox[{"IsserlisTheorem", "[", "I2", "]"}], " ", "/.", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"\[Omega]", "[", 
         RowBox[{"1", ",", "1"}], "]"}], "->", "q"}], ",", 
       RowBox[{
        RowBox[{"\[Omega]", "[", 
         RowBox[{"1", ",", "2"}], "]"}], "->", "q"}], ",", 
       RowBox[{
        RowBox[{"\[Omega]", "[", 
         RowBox[{"2", ",", "2"}], "]"}], "->", "q"}]}], "}"}]}]}], ";"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"Riskss", " ", "=", " ", "0"}], ";"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Risktt", " ", "=", " ", 
   RowBox[{
    RowBox[{"IsserlisTheorem", "[", "I2", "]"}], " ", "/.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{"\[Omega]", "[", 
        RowBox[{"1", ",", "1"}], "]"}], "->", "\[Rho]"}], ",", 
      RowBox[{
       RowBox[{"\[Omega]", "[", 
        RowBox[{"1", ",", "2"}], "]"}], "->", "\[Rho]"}], ",", 
      RowBox[{
       RowBox[{"\[Omega]", "[", 
        RowBox[{"2", ",", "2"}], "]"}], "->", "\[Rho]"}]}], "}"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Riskts", " ", "=", " ", 
    RowBox[{
     RowBox[{"IsserlisTheorem", "[", "I2", "]"}], " ", "/.", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"\[Omega]", "[", 
         RowBox[{"1", ",", "1"}], "]"}], "->", "q"}], ",", 
       RowBox[{
        RowBox[{"\[Omega]", "[", 
         RowBox[{"1", ",", "2"}], "]"}], "->", "m"}], ",", 
       RowBox[{
        RowBox[{"\[Omega]", "[", 
         RowBox[{"2", ",", "2"}], "]"}], "->", "\[Rho]"}]}], "}"}]}]}], ";"}],
   "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"Riskts", " ", "=", " ", "0"}], ";"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Pinv", " ", "=", " ", 
   RowBox[{"1", "/", "\[Rho]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Qorthinv", " ", "=", " ", 
   RowBox[{"1", "/", 
    RowBox[{"(", 
     RowBox[{"q", "-", 
      RowBox[{
       RowBox[{"m", "^", "2"}], "/", "\[Rho]"}]}], ")"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"GFM", " ", "=", " ", 
   RowBox[{"FullSimplify", "[", 
    RowBox[{"(", 
     RowBox[{"Psit", "-", "Psis"}], ")"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"GFQ", " ", "=", " ", 
   RowBox[{"FullSimplify", "[", 
    RowBox[{"(", 
     RowBox[{"PhiGFt", "-", "PhiGFs"}], ")"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"GFQorth", " ", "=", " ", 
   RowBox[{"FullSimplify", "[", 
    RowBox[{"GFQ", " ", "-", " ", 
     RowBox[{"m", "*", "Pinv", "*", "GFM"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"HDQ", " ", "=", " ", 
   RowBox[{"(", 
    RowBox[{"PhiHDtt", "+", "PhiHDss", "-", 
     RowBox[{"2", "*", "PhiHDts"}], "+", 
     RowBox[{"\[CapitalDelta]", "*", "PhiHDnoise"}]}], ")"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"mUpdate", " ", "=", 
  RowBox[{"\[Gamma]", "*", "GFM"}]}], "\[IndentingNewLine]", 
 RowBox[{"qUpdate", " ", "=", " ", 
  RowBox[{"FullSimplify", "[", 
   RowBox[{
    RowBox[{"2", "*", "\[Gamma]", "*", "GFQ"}], "+", 
    RowBox[{
     RowBox[{"\[Gamma]", "^", "2"}], "*", 
     RowBox[{"1", "/", "\[Alpha]"}], "*", "HDQ"}], "+", 
    RowBox[{
     RowBox[{"\[Gamma]", "^", "2"}], "*", "ind", "*", 
     RowBox[{"(", 
      RowBox[{"GFM", "*", "Pinv", "*", "GFM"}], ")"}]}], "+", 
    RowBox[{
     RowBox[{"\[Gamma]", "^", "2"}], "*", "ind", "*", 
     RowBox[{"(", 
      RowBox[{"GFQorth", "*", "Qorthinv", "*", "GFQorth"}], ")"}]}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"PopRisk", " ", "=", " ", 
  RowBox[{
   RowBox[{"1", "/", "2"}], "*", 
   RowBox[{"(", 
    RowBox[{"Riskss", " ", "+", "Risktt", "-", 
     RowBox[{"2", "*", "Riskts"}]}], ")"}]}]}]}], "Input",
 CellChangeTimes->CompressedData["
1:eJwdxV1IU2EABuBzlpoXrVYQiD9DZVvqzJpFZULzmwUatDIRp3YgrbXymFbK
IptWK12FCIadCyOVHCvaIDFzRW1FK+wHGpgGSYXLBBkc2YYpalHfu4uHJ62m
4bBRwjBMBoW/xrlv6xNF4vdyAu70f9Y1pIjE0PVwH56SfizGb1SOMqwNG6pw
7u63HP7zS1mD+Wkrj5v5TedwzypPEx6cOzh5hr5ufOI7dneQGczaVUHsytex
Z+ntz8qjZygn1aflIul7X6HBP/bYKnCBx1GJP2209GDOcX0AG0aF+3jnk9Uv
sX7X/Az23T02i2/FrY3gF7abv3FoamAFpw6P/sUaThuopy+aC37i53PsFlm6
SOKXhotwMH7sAJbbxvT49VGlbz092eyJfkcmKQplikSRJ3DYXC014iZNtQnH
3NvQiK955RfwdMKVNpyb+k3AJ5z2Bzj8TvoIj7hCbnw5kzzFst5WL2aShgI4
p38pgrefHGfDdFPAYsS1F2NMmL+kqsd1V13RY7d1W/Ahv7YFH1d8sOId/0Lt
eDa2ahkHc9awEfp5a0LrPN1XZr6BtybypgV6qbf0FPYl7Xfi7BK1Cyvq9toL
s0RSohccOF3X9RgfkTCv8PJE8eZe+lBHtwZ3cv3JWdkiWaj9koL/A2pMNWw=

  "],
 CellLabel->"In[7]:=",ExpressionUUID->"8471a02f-ebab-4ded-a511-e850886279da"],

Cell[BoxData[
 RowBox[{"9", " ", "\[Gamma]", " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"m", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"4", "-", 
          RowBox[{"5", " ", "q"}]}], ")"}], " ", "q"}]}], ")"}]}], "+", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "+", "q"}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "+", "\[Rho]"}], ")"}], " ", "\[Rho]"}], "+", 
    RowBox[{
     SuperscriptBox["m", "2"], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "2"}], "+", 
       RowBox[{"4", " ", "\[Rho]"}]}], ")"}]}]}], ")"}]}]], "Output",
 CellChangeTimes->{
  3.906109479966227*^9, {3.906109769677347*^9, 3.906109787181244*^9}, 
   3.906109894034622*^9, 3.907671302175868*^9, 3.9077457084367533`*^9, 
   3.9077463504646473`*^9, 3.907746383594322*^9, 3.9077464803919067`*^9, 
   3.907746529371086*^9, {3.907746626715076*^9, 3.9077466535843773`*^9}, {
   3.9077467160689383`*^9, 3.907746727714738*^9}, 3.9077492075015717`*^9, 
   3.907749399676866*^9, 3.907749504142296*^9, {3.9077495749861517`*^9, 
   3.90774961538064*^9}, 3.90774968048662*^9, 3.907749717189928*^9, 
   3.9077498676501837`*^9, 3.907749900269457*^9, {3.908266359344821*^9, 
   3.908266383783276*^9}, 3.9082664300421*^9, {3.908266693005704*^9, 
   3.908266721052535*^9}, 3.908266894182355*^9, {3.908267487868595*^9, 
   3.908267514674872*^9}, 3.9082676856196404`*^9, 3.908267720886178*^9, 
   3.908267756512186*^9, 3.9082680234213743`*^9, {3.908276612207253*^9, 
   3.908276629769394*^9}, 3.9082776622094917`*^9, 3.908277768332202*^9, {
   3.908278250365637*^9, 3.908278264125216*^9}, 3.9082783155293703`*^9, 
   3.908966284938506*^9, 3.9089663439420757`*^9, 3.9089669090463457`*^9, 
   3.9089670226821423`*^9, 3.908967098252325*^9, 3.90896717448251*^9, 
   3.908967401369681*^9, 3.9089676120820627`*^9, {3.908967877021496*^9, 
   3.90896790698695*^9}, 3.9089739692640667`*^9, 3.9101730974238653`*^9, 
   3.910173162777863*^9, {3.9101732370525923`*^9, 3.910173254261958*^9}, {
   3.910173298880864*^9, 3.910173302939629*^9}, 3.91017352424857*^9, 
   3.9101735651438417`*^9, {3.910175616240734*^9, 3.9101756357736387`*^9}, {
   3.910176107759172*^9, 3.910176121874711*^9}, 3.9101772104174213`*^9, {
   3.910177498858469*^9, 3.910177513409123*^9}, 3.910181730260037*^9, {
   3.910432632028203*^9, 3.910432660713612*^9}, 3.910432724956049*^9, {
   3.9104328114857473`*^9, 3.910432825974938*^9}, 3.914303250855523*^9, {
   3.914303667934889*^9, 3.914303696244533*^9}, 3.9143043180070257`*^9, 
   3.9143043953467007`*^9, 3.914304592152679*^9, 3.914304694721653*^9, {
   3.914305524786044*^9, 3.914305549225628*^9}, {3.914310593498517*^9, 
   3.9143106037604523`*^9}, 3.914310668530222*^9, 3.914310735910286*^9, 
   3.914311073540118*^9, 3.914311117318919*^9, {3.914311290996122*^9, 
   3.914311308954217*^9}, 3.9143133592891197`*^9, {3.9143145573285303`*^9, 
   3.914314571829999*^9}, {3.914315080663069*^9, 3.914315108752865*^9}, 
   3.914318325972412*^9, 3.9143885393165894`*^9, 3.914389085529002*^9, 
   3.914472977006016*^9, {3.914658222233924*^9, 3.9146582342642307`*^9}, 
   3.914659677671741*^9, 3.914933500647662*^9, 3.9154690416740923`*^9, 
   3.915530181946827*^9, 3.916387961252116*^9, 3.9163880073591022`*^9, 
   3.916388135998746*^9, 3.9163885584747*^9, 3.9163886184165583`*^9, 
   3.9179332861681232`*^9, 3.9179336296408987`*^9, 3.923641552274249*^9},
 CellLabel->"Out[24]=",ExpressionUUID->"e2ea483c-8d00-460b-a399-5f63093efd2f"],

Cell[BoxData[
 RowBox[{
  FractionBox["1", "\[Alpha]"], 
  RowBox[{"9", " ", "\[Gamma]", " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "120"}], " ", 
      SuperscriptBox["q", "4"], " ", 
      RowBox[{"(", 
       RowBox[{"7", "+", 
        RowBox[{"3", " ", "ind", " ", "\[Alpha]"}]}], ")"}], " ", 
      "\[Gamma]"}], "+", 
     RowBox[{"45", " ", 
      SuperscriptBox["q", "5"], " ", 
      RowBox[{"(", 
       RowBox[{"21", "+", 
        RowBox[{"5", " ", "ind", " ", "\[Alpha]"}]}], ")"}], " ", 
      "\[Gamma]"}], "+", 
     RowBox[{"2", " ", 
      SuperscriptBox["q", "3"], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "5"}], " ", "\[Alpha]"}], "+", 
        RowBox[{"3", " ", 
         RowBox[{"(", 
          RowBox[{"55", "+", 
           RowBox[{"39", " ", "ind", " ", "\[Alpha]"}]}], ")"}], " ", 
         "\[Gamma]"}]}], ")"}]}], "+", 
     RowBox[{"4", " ", 
      SuperscriptBox["m", "3"], " ", 
      RowBox[{"(", 
       RowBox[{"\[Alpha]", "-", 
        RowBox[{"3", " ", 
         RowBox[{"(", 
          RowBox[{"7", "+", 
           RowBox[{"3", " ", "ind", " ", "\[Alpha]"}], "+", 
           RowBox[{"15", " ", 
            SuperscriptBox["q", "2"], " ", 
            RowBox[{"(", 
             RowBox[{"7", "+", 
              RowBox[{"ind", " ", "\[Alpha]"}]}], ")"}]}], "-", 
           RowBox[{"2", " ", "q", " ", 
            RowBox[{"(", 
             RowBox[{"25", "+", 
              RowBox[{"6", " ", "ind", " ", "\[Alpha]"}]}], ")"}]}]}], ")"}], 
         " ", "\[Gamma]"}]}], ")"}]}], "-", 
     RowBox[{"2", " ", "m", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"9", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", 
           RowBox[{"q", " ", 
            RowBox[{"(", 
             RowBox[{"7", "+", 
              RowBox[{"5", " ", "q", " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "5"}], "+", 
                 RowBox[{"7", " ", "q"}]}], ")"}]}]}], ")"}]}]}], ")"}], " ", 
         "\[Gamma]"}], "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", 
           RowBox[{"3", " ", "q"}]}], ")"}], " ", "\[Alpha]", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", 
           RowBox[{"9", " ", "ind", " ", 
            RowBox[{"(", 
             RowBox[{"1", "+", 
              RowBox[{"q", " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "4"}], "+", 
                 RowBox[{"5", " ", "q"}]}], ")"}]}]}], ")"}], " ", 
            "\[Gamma]"}]}], ")"}]}]}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", "\[Rho]"}], ")"}]}], "+", 
     RowBox[{"36", " ", 
      SuperscriptBox["m", "4"], " ", "\[Gamma]", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "4"}], "+", 
        RowBox[{"10", " ", "\[Rho]"}], "+", 
        RowBox[{"ind", " ", "\[Alpha]", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "2"}], "+", 
           RowBox[{"3", " ", "\[Rho]"}]}], ")"}]}]}], ")"}]}], "+", 
     RowBox[{"\[Gamma]", " ", 
      RowBox[{"(", 
       RowBox[{"\[CapitalDelta]", "-", 
        RowBox[{"\[CapitalDelta]", " ", "\[Rho]"}], "+", 
        RowBox[{"3", " ", "\[Rho]", " ", 
         RowBox[{"(", 
          RowBox[{"3", "+", 
           RowBox[{"3", " ", "ind", " ", "\[Alpha]", " ", 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "+", "\[Rho]"}], ")"}], "2"]}], "+", 
           RowBox[{"\[Rho]", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "6"}], "+", 
              RowBox[{"5", " ", "\[Rho]"}]}], ")"}]}]}], ")"}]}]}], ")"}]}], 
     "+", 
     RowBox[{"2", " ", 
      SuperscriptBox["m", "2"], " ", "\[Gamma]", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "18"}], "+", "\[CapitalDelta]", "+", 
        RowBox[{"72", " ", "\[Rho]"}], "-", 
        RowBox[{"90", " ", 
         SuperscriptBox["\[Rho]", "2"]}], "-", 
        RowBox[{"18", " ", "ind", " ", "\[Alpha]", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "\[Rho]"}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", 
           RowBox[{"2", " ", "\[Rho]"}]}], ")"}]}], "+", 
        RowBox[{"18", " ", "q", " ", 
         RowBox[{"(", 
          RowBox[{"3", "+", 
           RowBox[{"ind", " ", "\[Alpha]", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", "\[Rho]"}], ")"}], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "2"}], "+", 
              RowBox[{"3", " ", "\[Rho]"}]}], ")"}]}], "+", 
           RowBox[{"3", " ", "\[Rho]", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "4"}], "+", 
              RowBox[{"5", " ", "\[Rho]"}]}], ")"}]}]}], ")"}]}]}], ")"}]}], 
     "+", 
     RowBox[{"q", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"\[Alpha]", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "2"}], "+", 
           RowBox[{"9", " ", "ind", " ", "\[Gamma]", " ", 
            RowBox[{"(", 
             RowBox[{"1", "-", 
              RowBox[{"2", " ", 
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"-", "1"}], "+", "\[Rho]"}], ")"}], "2"], " ", 
               "\[Rho]"}]}], ")"}]}]}], ")"}]}], "+", 
        RowBox[{"\[Gamma]", " ", 
         RowBox[{"(", 
          RowBox[{"9", "+", 
           RowBox[{"\[CapitalDelta]", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", "\[Rho]"}], ")"}]}], "-", 
           RowBox[{"6", " ", "\[Rho]", " ", 
            RowBox[{"(", 
             RowBox[{"3", "+", 
              RowBox[{"\[Rho]", " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "6"}], "+", 
                 RowBox[{"5", " ", "\[Rho]"}]}], ")"}]}]}], ")"}]}]}], 
          ")"}]}]}], ")"}]}], "+", 
     RowBox[{
      SuperscriptBox["q", "2"], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"\[Alpha]", " ", 
         RowBox[{"(", 
          RowBox[{"8", "+", 
           RowBox[{"9", " ", "ind", " ", "\[Gamma]", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "8"}], "+", 
              RowBox[{
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"-", "1"}], "+", "\[Rho]"}], ")"}], "2"], " ", 
               "\[Rho]"}]}], ")"}]}]}], ")"}]}], "+", 
        RowBox[{"9", " ", "\[Gamma]", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "8"}], "+", 
           RowBox[{"\[Rho]", " ", 
            RowBox[{"(", 
             RowBox[{"3", "+", 
              RowBox[{"\[Rho]", " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "6"}], "+", 
                 RowBox[{"5", " ", "\[Rho]"}]}], ")"}]}]}], ")"}]}]}], 
          ")"}]}]}], ")"}]}]}], ")"}]}]}]], "Output",
 CellChangeTimes->{
  3.906109479966227*^9, {3.906109769677347*^9, 3.906109787181244*^9}, 
   3.906109894034622*^9, 3.907671302175868*^9, 3.9077457084367533`*^9, 
   3.9077463504646473`*^9, 3.907746383594322*^9, 3.9077464803919067`*^9, 
   3.907746529371086*^9, {3.907746626715076*^9, 3.9077466535843773`*^9}, {
   3.9077467160689383`*^9, 3.907746727714738*^9}, 3.9077492075015717`*^9, 
   3.907749399676866*^9, 3.907749504142296*^9, {3.9077495749861517`*^9, 
   3.90774961538064*^9}, 3.90774968048662*^9, 3.907749717189928*^9, 
   3.9077498676501837`*^9, 3.907749900269457*^9, {3.908266359344821*^9, 
   3.908266383783276*^9}, 3.9082664300421*^9, {3.908266693005704*^9, 
   3.908266721052535*^9}, 3.908266894182355*^9, {3.908267487868595*^9, 
   3.908267514674872*^9}, 3.9082676856196404`*^9, 3.908267720886178*^9, 
   3.908267756512186*^9, 3.9082680234213743`*^9, {3.908276612207253*^9, 
   3.908276629769394*^9}, 3.9082776622094917`*^9, 3.908277768332202*^9, {
   3.908278250365637*^9, 3.908278264125216*^9}, 3.9082783155293703`*^9, 
   3.908966284938506*^9, 3.9089663439420757`*^9, 3.9089669090463457`*^9, 
   3.9089670226821423`*^9, 3.908967098252325*^9, 3.90896717448251*^9, 
   3.908967401369681*^9, 3.9089676120820627`*^9, {3.908967877021496*^9, 
   3.90896790698695*^9}, 3.9089739692640667`*^9, 3.9101730974238653`*^9, 
   3.910173162777863*^9, {3.9101732370525923`*^9, 3.910173254261958*^9}, {
   3.910173298880864*^9, 3.910173302939629*^9}, 3.91017352424857*^9, 
   3.9101735651438417`*^9, {3.910175616240734*^9, 3.9101756357736387`*^9}, {
   3.910176107759172*^9, 3.910176121874711*^9}, 3.9101772104174213`*^9, {
   3.910177498858469*^9, 3.910177513409123*^9}, 3.910181730260037*^9, {
   3.910432632028203*^9, 3.910432660713612*^9}, 3.910432724956049*^9, {
   3.9104328114857473`*^9, 3.910432825974938*^9}, 3.914303250855523*^9, {
   3.914303667934889*^9, 3.914303696244533*^9}, 3.9143043180070257`*^9, 
   3.9143043953467007`*^9, 3.914304592152679*^9, 3.914304694721653*^9, {
   3.914305524786044*^9, 3.914305549225628*^9}, {3.914310593498517*^9, 
   3.9143106037604523`*^9}, 3.914310668530222*^9, 3.914310735910286*^9, 
   3.914311073540118*^9, 3.914311117318919*^9, {3.914311290996122*^9, 
   3.914311308954217*^9}, 3.9143133592891197`*^9, {3.9143145573285303`*^9, 
   3.914314571829999*^9}, {3.914315080663069*^9, 3.914315108752865*^9}, 
   3.914318325972412*^9, 3.9143885393165894`*^9, 3.914389085529002*^9, 
   3.914472977006016*^9, {3.914658222233924*^9, 3.9146582342642307`*^9}, 
   3.914659677671741*^9, 3.914933500647662*^9, 3.9154690416740923`*^9, 
   3.915530181946827*^9, 3.916387961252116*^9, 3.9163880073591022`*^9, 
   3.916388135998746*^9, 3.9163885584747*^9, 3.9163886184165583`*^9, 
   3.9179332861681232`*^9, 3.9179336296408987`*^9, 3.9236415535494833`*^9},
 CellLabel->"Out[25]=",ExpressionUUID->"08f344da-2b78-4046-b581-c3b15a56064c"],

Cell[BoxData[
 RowBox[{
  FractionBox["1", "2"], " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"9", " ", "q"}], "-", 
    RowBox[{"18", " ", 
     SuperscriptBox["q", "2"]}], "+", 
    RowBox[{"15", " ", 
     SuperscriptBox["q", "3"]}], "+", 
    RowBox[{"9", " ", "\[Rho]"}], "-", 
    RowBox[{"18", " ", 
     SuperscriptBox["\[Rho]", "2"]}], "+", 
    RowBox[{"15", " ", 
     SuperscriptBox["\[Rho]", "3"]}], "-", 
    RowBox[{"2", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"9", " ", "m"}], "+", 
       RowBox[{"6", " ", 
        SuperscriptBox["m", "3"]}], "-", 
       RowBox[{"9", " ", "m", " ", "q"}], "-", 
       RowBox[{"9", " ", "m", " ", "\[Rho]"}], "+", 
       RowBox[{"9", " ", "m", " ", "q", " ", "\[Rho]"}]}], ")"}]}]}], 
   ")"}]}]], "Output",
 CellChangeTimes->{
  3.906109479966227*^9, {3.906109769677347*^9, 3.906109787181244*^9}, 
   3.906109894034622*^9, 3.907671302175868*^9, 3.9077457084367533`*^9, 
   3.9077463504646473`*^9, 3.907746383594322*^9, 3.9077464803919067`*^9, 
   3.907746529371086*^9, {3.907746626715076*^9, 3.9077466535843773`*^9}, {
   3.9077467160689383`*^9, 3.907746727714738*^9}, 3.9077492075015717`*^9, 
   3.907749399676866*^9, 3.907749504142296*^9, {3.9077495749861517`*^9, 
   3.90774961538064*^9}, 3.90774968048662*^9, 3.907749717189928*^9, 
   3.9077498676501837`*^9, 3.907749900269457*^9, {3.908266359344821*^9, 
   3.908266383783276*^9}, 3.9082664300421*^9, {3.908266693005704*^9, 
   3.908266721052535*^9}, 3.908266894182355*^9, {3.908267487868595*^9, 
   3.908267514674872*^9}, 3.9082676856196404`*^9, 3.908267720886178*^9, 
   3.908267756512186*^9, 3.9082680234213743`*^9, {3.908276612207253*^9, 
   3.908276629769394*^9}, 3.9082776622094917`*^9, 3.908277768332202*^9, {
   3.908278250365637*^9, 3.908278264125216*^9}, 3.9082783155293703`*^9, 
   3.908966284938506*^9, 3.9089663439420757`*^9, 3.9089669090463457`*^9, 
   3.9089670226821423`*^9, 3.908967098252325*^9, 3.90896717448251*^9, 
   3.908967401369681*^9, 3.9089676120820627`*^9, {3.908967877021496*^9, 
   3.90896790698695*^9}, 3.9089739692640667`*^9, 3.9101730974238653`*^9, 
   3.910173162777863*^9, {3.9101732370525923`*^9, 3.910173254261958*^9}, {
   3.910173298880864*^9, 3.910173302939629*^9}, 3.91017352424857*^9, 
   3.9101735651438417`*^9, {3.910175616240734*^9, 3.9101756357736387`*^9}, {
   3.910176107759172*^9, 3.910176121874711*^9}, 3.9101772104174213`*^9, {
   3.910177498858469*^9, 3.910177513409123*^9}, 3.910181730260037*^9, {
   3.910432632028203*^9, 3.910432660713612*^9}, 3.910432724956049*^9, {
   3.9104328114857473`*^9, 3.910432825974938*^9}, 3.914303250855523*^9, {
   3.914303667934889*^9, 3.914303696244533*^9}, 3.9143043180070257`*^9, 
   3.9143043953467007`*^9, 3.914304592152679*^9, 3.914304694721653*^9, {
   3.914305524786044*^9, 3.914305549225628*^9}, {3.914310593498517*^9, 
   3.9143106037604523`*^9}, 3.914310668530222*^9, 3.914310735910286*^9, 
   3.914311073540118*^9, 3.914311117318919*^9, {3.914311290996122*^9, 
   3.914311308954217*^9}, 3.9143133592891197`*^9, {3.9143145573285303`*^9, 
   3.914314571829999*^9}, {3.914315080663069*^9, 3.914315108752865*^9}, 
   3.914318325972412*^9, 3.9143885393165894`*^9, 3.914389085529002*^9, 
   3.914472977006016*^9, {3.914658222233924*^9, 3.9146582342642307`*^9}, 
   3.914659677671741*^9, 3.914933500647662*^9, 3.9154690416740923`*^9, 
   3.915530181946827*^9, 3.916387961252116*^9, 3.9163880073591022`*^9, 
   3.916388135998746*^9, 3.9163885584747*^9, 3.9163886184165583`*^9, 
   3.9179332861681232`*^9, 3.9179336296408987`*^9, 3.923641553553019*^9},
 CellLabel->"Out[26]=",ExpressionUUID->"e1055b32-6f73-4cdd-8ca8-f7be561b5d83"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"mUpdateSpherical", " ", "=", " ", 
  RowBox[{"FullSimplify", "[", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"m", "+", "mUpdate"}], ")"}], "/", 
      RowBox[{"Sqrt", "[", 
       RowBox[{"q", "+", "qUpdate"}], "]"}]}], ")"}], "/.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"\[Rho]", "->", "1"}], ",", 
      RowBox[{"q", "->", "1"}], ",", 
      RowBox[{"ind", "->", "1"}], ",", 
      RowBox[{"\[CapitalDelta]", "->", "0"}]}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmViYGCQAGIQvejXdc1cubeOMX6CWiD6q+5tOxC9afFhRxDtkRAV
DaIf8LSC6Q2TZheAaB2fxWB6xdwJB8B8aYFjYHVy+cx5QNpzwjIOEP0s1P9B
AZBu2j0BTAtlaVoXAekj61aDaYENubM/ar51XCAlPQ9E/4qdceKV7ltH+0e3
z4LoecG7L4Hoex5HwbTdBcH2uwZvHXvYLvSB6GW66ZNB9BS1IjDN5P5nDog2
P1yyDETXfNq3CkS/n3MGTJt96VoPosV8Hm8A0Xpnn/M/BNIvtRbIgOgf3XZq
IJrlU4gGiK6POdsAom93fAbTt55fPQui7+dlXgDRG+wi2B4B6UcvedhB9O37
cY9B9K+H88D0T+vXao+B9IpVEVog+uHyc1MPWL91zLBynQmiAV4rynU=
  "],
 CellLabel->"In[27]:=",ExpressionUUID->"236099f9-bb51-4b10-9cb0-a97f475a9b69"],

Cell[BoxData[
 FractionBox[
  RowBox[{"m", "+", 
   RowBox[{"18", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "+", "m"}], ")"}], " ", "m", " ", "\[Gamma]"}]}], 
  SqrtBox[
   RowBox[{"1", "+", 
    RowBox[{"36", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "+", 
       SuperscriptBox["m", "3"]}], ")"}], " ", "\[Gamma]"}], "+", 
    FractionBox[
     RowBox[{"108", " ", 
      RowBox[{"(", 
       RowBox[{"32", "+", 
        RowBox[{"3", " ", "\[Alpha]"}], "+", 
        RowBox[{
         SuperscriptBox["m", "2"], " ", 
         RowBox[{"(", 
          RowBox[{"12", "+", 
           RowBox[{"m", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "62"}], "-", 
              RowBox[{"6", " ", "\[Alpha]"}], "+", 
              RowBox[{"3", " ", "m", " ", 
               RowBox[{"(", 
                RowBox[{"6", "+", "\[Alpha]"}], ")"}]}]}], ")"}]}]}], 
          ")"}]}]}], ")"}], " ", 
      SuperscriptBox["\[Gamma]", "2"]}], "\[Alpha]"]}]]]], "Output",
 CellChangeTimes->{{3.910175616247883*^9, 3.9101756358089647`*^9}, {
   3.9101761077646627`*^9, 3.910176121901658*^9}, 3.9101772105053473`*^9, {
   3.910177498882056*^9, 3.910177513893736*^9}, 3.910181730344604*^9, {
   3.910432632359715*^9, 3.910432660717442*^9}, 3.910432725283223*^9, {
   3.910432811504854*^9, 3.910432826301015*^9}, 3.914303250862484*^9, {
   3.914303668285578*^9, 3.9143036965936728`*^9}, 3.914304417960931*^9, 
   3.9143045922690496`*^9, 3.914304694967937*^9, {3.914304736075581*^9, 
   3.914304753894133*^9}, {3.91430552482021*^9, 3.914305549335702*^9}, {
   3.914310593507462*^9, 3.914310603839993*^9}, 3.9143106688626003`*^9, 
   3.914310737202118*^9, 3.914311073781254*^9, 3.914311117436717*^9, {
   3.9143112936767*^9, 3.914311309824422*^9}, 3.914313359652549*^9, {
   3.914315083831292*^9, 3.914315109268085*^9}, 3.914318326158783*^9, 
   3.914388540803773*^9, 3.914389088967222*^9, 3.914472978521673*^9, {
   3.9146582234034*^9, 3.914658234403165*^9}, 3.914659678118553*^9, 
   3.914933501551365*^9, 3.915469043007234*^9, 3.9155301821623507`*^9, {
   3.916387956583527*^9, 3.916387961585807*^9}, 3.916388007971273*^9, 
   3.9163881382639112`*^9, 3.9163885590959377`*^9, 3.916388623151038*^9, 
   3.91793328842997*^9, {3.917933630398451*^9, 3.917933687963443*^9}, 
   3.9179337249020357`*^9, {3.917933807693965*^9, 3.917933818548706*^9}, {
   3.917933866056499*^9, 3.917933912323732*^9}, {3.917933952471661*^9, 
   3.917933962320977*^9}, {3.917940889383514*^9, 3.917940895026579*^9}, 
   3.917940930290992*^9, 3.917940967865726*^9, 3.917941060390422*^9, 
   3.917941773848048*^9, {3.9179423667292223`*^9, 3.917942403646994*^9}, 
   3.917942840774341*^9, 3.9179433204830236`*^9, {3.917944614288867*^9, 
   3.917944615190412*^9}, {3.917945144922731*^9, 3.91794517213945*^9}, 
   3.923641553821706*^9},
 CellLabel->"Out[27]=",ExpressionUUID->"c7edfca7-755a-43db-a561-f07c909e253b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FortranForm", "[", 
  RowBox[{"IsserlisTheorem", "[", "I2noise", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.906109970852398*^9, 3.9061099803272257`*^9}, {
   3.914658208143605*^9, 3.91465821400249*^9}, {3.9146582529373827`*^9, 
   3.9146583870301123`*^9}, {3.9146584187950773`*^9, 3.914658553670755*^9}, {
   3.914659720022233*^9, 3.914659772781877*^9}, {3.914933497230851*^9, 
   3.9149334973373423`*^9}, 3.923641586935684*^9, {3.923641625606851*^9, 
   3.9236416272987823`*^9}},
 CellLabel->"In[34]:=",ExpressionUUID->"4a67acdd-b2ff-4bef-8c4c-501bc1039c0d"],

Cell["9 - 9*\[Omega](1,1) + 18*\[Omega](1,2)**2 - 9*\[Omega](2,2) + \
9*\[Omega](1,1)*\[Omega](2,2)", "Output",
 CellChangeTimes->{
  3.914658350544256*^9, 3.9146583888778143`*^9, {3.914658457000791*^9, 
   3.914658554963758*^9}, 3.914659678179885*^9, {3.914659721801385*^9, 
   3.914659773806737*^9}, 3.9149335016969023`*^9, 3.91546904309667*^9, 
   3.9155301822249537`*^9, 3.91638796178869*^9, 3.9163880080331097`*^9, 
   3.916388138334844*^9, 3.916388559222522*^9, 3.9163886232880096`*^9, 
   3.917933288812242*^9, 3.917933630537483*^9, 3.923641554452331*^9, 
   3.923641590246449*^9, 3.923641628705572*^9},
 CellLabel->
  "Out[34]//FortranForm=",ExpressionUUID->"ed277345-bc23-4230-9ce5-\
7b86fa9e6e60"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FortranForm", "[", 
  RowBox[{"IsserlisTheorem", "[", "I2", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.923641736523884*^9, 3.923641738455052*^9}},
 CellLabel->"In[35]:=",ExpressionUUID->"aa3c02b9-3286-4bd5-8caf-06f07883f1c1"],

Cell["\<\
        9*\[Omega](1,2) - 9*\[Omega](1,1)*\[Omega](1,2) + 6*\[Omega](1,2)**3 \
- 9*\[Omega](1,2)*\[Omega](2,2) + 
     -  9*\[Omega](1,1)*\[Omega](1,2)*\[Omega](2,2)\
\>", "Output",
 CellChangeTimes->{3.923641739185999*^9},
 CellLabel->
  "Out[35]//FortranForm=",ExpressionUUID->"4a1deb02-3bdd-4b55-967e-\
94ca2bb25975"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FortranForm", "[", 
  RowBox[{"IsserlisTheorem", "[", "I3", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.92364178447392*^9, 3.923641815810465*^9}, {
  3.923641924014015*^9, 
  3.923641931825536*^9}},ExpressionUUID->"ca9e4e76-7897-4067-88c1-\
fe509564c20e"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"-", "18"}], " ", 
   RowBox[{"\[Omega]", "[", 
    RowBox[{"1", ",", "2"}], "]"}], " ", 
   RowBox[{"\[Omega]", "[", 
    RowBox[{"1", ",", "3"}], "]"}]}], "+", 
  RowBox[{"9", " ", 
   RowBox[{"\[Omega]", "[", 
    RowBox[{"2", ",", "3"}], "]"}]}], "-", 
  RowBox[{"9", " ", 
   RowBox[{"\[Omega]", "[", 
    RowBox[{"1", ",", "1"}], "]"}], " ", 
   RowBox[{"\[Omega]", "[", 
    RowBox[{"2", ",", "3"}], "]"}]}], "+", 
  RowBox[{"18", " ", 
   SuperscriptBox[
    RowBox[{"\[Omega]", "[", 
     RowBox[{"1", ",", "3"}], "]"}], "2"], " ", 
   RowBox[{"\[Omega]", "[", 
    RowBox[{"2", ",", "3"}], "]"}]}], "+", 
  RowBox[{"18", " ", 
   RowBox[{"\[Omega]", "[", 
    RowBox[{"1", ",", "2"}], "]"}], " ", 
   RowBox[{"\[Omega]", "[", 
    RowBox[{"1", ",", "3"}], "]"}], " ", 
   RowBox[{"\[Omega]", "[", 
    RowBox[{"3", ",", "3"}], "]"}]}], "-", 
  RowBox[{"9", " ", 
   RowBox[{"\[Omega]", "[", 
    RowBox[{"2", ",", "3"}], "]"}], " ", 
   RowBox[{"\[Omega]", "[", 
    RowBox[{"3", ",", "3"}], "]"}]}], "+", 
  RowBox[{"9", " ", 
   RowBox[{"\[Omega]", "[", 
    RowBox[{"1", ",", "1"}], "]"}], " ", 
   RowBox[{"\[Omega]", "[", 
    RowBox[{"2", ",", "3"}], "]"}], " ", 
   RowBox[{"\[Omega]", "[", 
    RowBox[{"3", ",", "3"}], "]"}]}]}]], "Output",
 CellChangeTimes->{3.9236417856270103`*^9, 3.923641818520563*^9},
 CellLabel->"Out[37]=",ExpressionUUID->"588b98f3-e603-470f-8b6f-728f42c9b1c8"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FortranForm", "[", 
  RowBox[{"IsserlisTheorem", "[", "I4", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.9236419385868807`*^9, 3.9236419386622334`*^9}},
 CellLabel->"In[38]:=",ExpressionUUID->"d306fbfa-0913-42bd-a086-c80173547b6c"],

Cell["\<\
        -162*\[Omega](1,3)*\[Omega](1,4) + 162*\[Omega](1,3)*\[Omega](1,4)*\
\[Omega](2,2) + 
     -  324*\[Omega](1,2)*\[Omega](1,4)*\[Omega](2,3) - 324*\[Omega](1,3)*\
\[Omega](1,4)*\[Omega](2,3)**2 + 
     -  324*\[Omega](1,2)*\[Omega](1,3)*\[Omega](2,4) - 162*\[Omega](2,3)*\
\[Omega](2,4) + 
     -  162*\[Omega](1,1)*\[Omega](2,3)*\[Omega](2,4) - 324*\[Omega](1,3)**2*\
\[Omega](2,3)*\[Omega](2,4) - 
     -  324*\[Omega](1,4)**2*\[Omega](2,3)*\[Omega](2,4) - 324*\[Omega](1,3)*\
\[Omega](1,4)*\[Omega](2,4)**2 + 
     -  162*\[Omega](1,3)*\[Omega](1,4)*\[Omega](3,3) - 162*\[Omega](1,3)*\
\[Omega](1,4)*\[Omega](2,2)*\[Omega](3,3) - 
     -  324*\[Omega](1,2)*\[Omega](1,4)*\[Omega](2,3)*\[Omega](3,3) - 324*\
\[Omega](1,2)*\[Omega](1,3)*\[Omega](2,4)*\[Omega](3,3) + 
     -  162*\[Omega](2,3)*\[Omega](2,4)*\[Omega](3,3) - 162*\[Omega](1,1)*\
\[Omega](2,3)*\[Omega](2,4)*\[Omega](3,3) + 
     -  324*\[Omega](1,4)**2*\[Omega](2,3)*\[Omega](2,4)*\[Omega](3,3) + 
     -  324*\[Omega](1,3)*\[Omega](1,4)*\[Omega](2,4)**2*\[Omega](3,3) + 81*\
\[Omega](3,4) - 81*\[Omega](1,1)*\[Omega](3,4) + 
     -  162*\[Omega](1,2)**2*\[Omega](3,4) + \
162*\[Omega](1,3)**2*\[Omega](3,4) + 
     -  162*\[Omega](1,4)**2*\[Omega](3,4) - 81*\[Omega](2,2)*\[Omega](3,4) + \
81*\[Omega](1,1)*\[Omega](2,2)*\[Omega](3,4) - 
     -  162*\[Omega](1,3)**2*\[Omega](2,2)*\[Omega](3,4) - \
162*\[Omega](1,4)**2*\[Omega](2,2)*\[Omega](3,4) - 
     -  648*\[Omega](1,2)*\[Omega](1,3)*\[Omega](2,3)*\[Omega](3,4) + 162*\
\[Omega](2,3)**2*\[Omega](3,4) - 
     -  162*\[Omega](1,1)*\[Omega](2,3)**2*\[Omega](3,4) + \
324*\[Omega](1,4)**2*\[Omega](2,3)**2*\[Omega](3,4) - 
     -  648*\[Omega](1,2)*\[Omega](1,4)*\[Omega](2,4)*\[Omega](3,4) + 
     -  1296*\[Omega](1,3)*\[Omega](1,4)*\[Omega](2,3)*\[Omega](2,4)*\[Omega](\
3,4) + 162*\[Omega](2,4)**2*\[Omega](3,4) - 
     -  162*\[Omega](1,1)*\[Omega](2,4)**2*\[Omega](3,4) + \
324*\[Omega](1,3)**2*\[Omega](2,4)**2*\[Omega](3,4) - 
     -  81*\[Omega](3,3)*\[Omega](3,4) + 81*\[Omega](1,1)*\[Omega](3,3)*\
\[Omega](3,4) - 
     -  162*\[Omega](1,2)**2*\[Omega](3,3)*\[Omega](3,4) - \
162*\[Omega](1,4)**2*\[Omega](3,3)*\[Omega](3,4) + 
     -  81*\[Omega](2,2)*\[Omega](3,3)*\[Omega](3,4) - 81*\[Omega](1,1)*\
\[Omega](2,2)*\[Omega](3,3)*\[Omega](3,4) + 
     -  162*\[Omega](1,4)**2*\[Omega](2,2)*\[Omega](3,3)*\[Omega](3,4) + 
     -  648*\[Omega](1,2)*\[Omega](1,4)*\[Omega](2,4)*\[Omega](3,3)*\[Omega](\
3,4) - 
     -  162*\[Omega](2,4)**2*\[Omega](3,3)*\[Omega](3,4) + 162*\[Omega](1,1)*\
\[Omega](2,4)**2*\[Omega](3,3)*\[Omega](3,4) - 
     -  324*\[Omega](1,3)*\[Omega](1,4)*\[Omega](3,4)**2 + 324*\[Omega](1,3)*\
\[Omega](1,4)*\[Omega](2,2)*\[Omega](3,4)**2 + 
     -  648*\[Omega](1,2)*\[Omega](1,4)*\[Omega](2,3)*\[Omega](3,4)**2 + 
     -  648*\[Omega](1,2)*\[Omega](1,3)*\[Omega](2,4)*\[Omega](3,4)**2 - 324*\
\[Omega](2,3)*\[Omega](2,4)*\[Omega](3,4)**2 + 
     -  324*\[Omega](1,1)*\[Omega](2,3)*\[Omega](2,4)*\[Omega](3,4)**2 + 54*\
\[Omega](3,4)**3 - 
     -  54*\[Omega](1,1)*\[Omega](3,4)**3 + \
108*\[Omega](1,2)**2*\[Omega](3,4)**3 - 
     -  54*\[Omega](2,2)*\[Omega](3,4)**3 + 54*\[Omega](1,1)*\[Omega](2,2)*\
\[Omega](3,4)**3 + 
     -  162*\[Omega](1,3)*\[Omega](1,4)*\[Omega](4,4) - 162*\[Omega](1,3)*\
\[Omega](1,4)*\[Omega](2,2)*\[Omega](4,4) - 
     -  324*\[Omega](1,2)*\[Omega](1,4)*\[Omega](2,3)*\[Omega](4,4) + 
     -  324*\[Omega](1,3)*\[Omega](1,4)*\[Omega](2,3)**2*\[Omega](4,4) - 
     -  324*\[Omega](1,2)*\[Omega](1,3)*\[Omega](2,4)*\[Omega](4,4) + 162*\
\[Omega](2,3)*\[Omega](2,4)*\[Omega](4,4) - 
     -  162*\[Omega](1,1)*\[Omega](2,3)*\[Omega](2,4)*\[Omega](4,4) + 
     -  324*\[Omega](1,3)**2*\[Omega](2,3)*\[Omega](2,4)*\[Omega](4,4) - 
     -  162*\[Omega](1,3)*\[Omega](1,4)*\[Omega](3,3)*\[Omega](4,4) + 
     -  162*\[Omega](1,3)*\[Omega](1,4)*\[Omega](2,2)*\[Omega](3,3)*\[Omega](\
4,4) + 
     -  324*\[Omega](1,2)*\[Omega](1,4)*\[Omega](2,3)*\[Omega](3,3)*\[Omega](\
4,4) + 
     -  324*\[Omega](1,2)*\[Omega](1,3)*\[Omega](2,4)*\[Omega](3,3)*\[Omega](\
4,4) - 
     -  162*\[Omega](2,3)*\[Omega](2,4)*\[Omega](3,3)*\[Omega](4,4) + 
     -  162*\[Omega](1,1)*\[Omega](2,3)*\[Omega](2,4)*\[Omega](3,3)*\[Omega](\
4,4) - 81*\[Omega](3,4)*\[Omega](4,4) + 
     -  81*\[Omega](1,1)*\[Omega](3,4)*\[Omega](4,4) - 162*\[Omega](1,2)**2*\
\[Omega](3,4)*\[Omega](4,4) - 
     -  162*\[Omega](1,3)**2*\[Omega](3,4)*\[Omega](4,4) + 81*\[Omega](2,2)*\
\[Omega](3,4)*\[Omega](4,4) - 
     -  81*\[Omega](1,1)*\[Omega](2,2)*\[Omega](3,4)*\[Omega](4,4) + 
     -  162*\[Omega](1,3)**2*\[Omega](2,2)*\[Omega](3,4)*\[Omega](4,4) + 
     -  648*\[Omega](1,2)*\[Omega](1,3)*\[Omega](2,3)*\[Omega](3,4)*\[Omega](\
4,4) - 
     -  162*\[Omega](2,3)**2*\[Omega](3,4)*\[Omega](4,4) + 162*\[Omega](1,1)*\
\[Omega](2,3)**2*\[Omega](3,4)*\[Omega](4,4) + 
     -  81*\[Omega](3,3)*\[Omega](3,4)*\[Omega](4,4) - 81*\[Omega](1,1)*\
\[Omega](3,3)*\[Omega](3,4)*\[Omega](4,4) + 
     -  162*\[Omega](1,2)**2*\[Omega](3,3)*\[Omega](3,4)*\[Omega](4,4) - 
     -  81*\[Omega](2,2)*\[Omega](3,3)*\[Omega](3,4)*\[Omega](4,4) + 
     -  81*\[Omega](1,1)*\[Omega](2,2)*\[Omega](3,3)*\[Omega](3,4)*\[Omega](4,\
4)\
\>", "Output",
 CellChangeTimes->{3.923641939332654*^9},
 CellLabel->
  "Out[38]//FortranForm=",ExpressionUUID->"432c0645-a60b-4b75-a4a4-\
0c911651fda1"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FortranForm", "[", "mUpdateSpherical", " ", "]"}]], "Input",
 CellChangeTimes->{{3.9154692303986197`*^9, 3.915469252436583*^9}},
 CellLabel->"In[32]:=",ExpressionUUID->"0bb806fe-e6d6-4d34-a5a8-8ae93bfb9207"],

Cell["\<\
        (m + 18*(-1 + m)*m*\[Gamma])/
     -  Sqrt(1 + 36*(-1 + m**3)*\[Gamma] + 
     -    (108*(32 + 3*\[Alpha] + m**2*(12 + m*(-62 - 6*\[Alpha] + 3*m*(6 + \
\[Alpha]))))*\[Gamma]**2)/\[Alpha])\
\>", "Output",
 CellChangeTimes->{3.915469253241398*^9, 3.915530182229191*^9, 
  3.916387961792439*^9, 3.916388008038995*^9, 3.91638813833812*^9, 
  3.916388559226273*^9, 3.916388623291464*^9, 3.9179332888228083`*^9, 
  3.917933630540709*^9, 3.9236415544548683`*^9},
 CellLabel->
  "Out[32]//FortranForm=",ExpressionUUID->"e6b05214-0562-493c-b04c-\
15c8c82c88c6"]
}, Open  ]]
},
WindowSize->{Full, Full},
WindowMargins->{{Automatic, 577}, {10, Automatic}},
DockedCells->{
  Cell[
   BoxData[
    DynamicModuleBox[{LinterUIDockedCell`Private`notebook$$}, 
     GraphicsBox[{
       InsetBox[
        TemplateBox[{
          PaneBox[
           StyleBox[
           "\"Code Analysis\"", FontColor -> GrayLevel[0.4], FontFamily -> 
            "Source Sans Pro", FontWeight -> Plain, FontSize -> 13, 
            StripOnInput -> False], 
           BaselinePosition -> (Baseline -> Scaled[0.65])], 
          TemplateBox[{8}, "Spacer1"], 
          PaneBox[
           
           PaneSelectorBox[{{False, False} -> 
             TemplateBox[{0}, "Spacer1"], {True, False} -> 
             TemplateBox[{0}, "Spacer1"], {True, True} -> PaneBox[
               InterpretationBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEExpressions", "PercolateAnimator"][Medium]], 
                ProgressIndicator[Appearance -> "Percolate"], 
                BaseStyle -> {"Deploy"}], BaselinePosition -> Scaled[0.05]], {
              False, True} -> 
             DynamicModuleBox[{
               CodeInspector`LinterUI`Private`tracker$$ = 
                CodeInspector`LinterUI`Private`DynamicTriggers`\
dockedCellLintCounts}, 
               DynamicWrapperBox[
                DynamicBox[
                 ToBoxes[
                 CodeInspector`LinterUI`Private`tracker$$; 
                  LinterUIDockedCell`Private`dockedCellSeverityCountsButton[
                   LinterUIDockedCell`Private`notebook$$], TraditionalForm], 
                 TrackedSymbols :> {
                  CodeInspector`LinterUI`Private`tracker$$}], 
                If[
                CodeInspector`LinterUI`Private`tracker$$ =!= 
                 CodeInspector`LinterUI`Private`DynamicTriggers`\
dockedCellLintCounts, CodeInspector`LinterUI`Private`tracker$$ = 
                 CodeInspector`LinterUI`Private`DynamicTriggers`\
dockedCellLintCounts]], DynamicModuleValues :> {}]}, 
            Dynamic[FEPrivate`EvaluatorStatus["Local"]; {
               CodeInspector`LinterUI`Private`varValue[
               LinterUIDockedCell`Private`notebook$$, "AnalysisInProgressQ"], 
               
               TrueQ[
                CodeInspector`LinterUI`Private`varValue[
                LinterUIDockedCell`Private`notebook$$, 
                 "DockedCellPresentQ"]]}], ImageSize -> Automatic], 
           BaselinePosition -> Scaled[0.15]]}, "Row", 
         DisplayFunction -> (PaneBox[
           RowBox[{
             TemplateSlotSequence[1, "\[InvisibleSpace]"]}], Alignment -> 
           Baseline]& ), InterpretationFunction -> (RowBox[{"Row", "[", 
            RowBox[{
              RowBox[{"{", 
                TemplateSlotSequence[1, ","], "}"}], ",", 
              RowBox[{"Alignment", "\[Rule]", "Baseline"}]}], "]"}]& )], 
        Offset[{8, 0}, {-1, 0}], {-1, 0}], 
       InsetBox[
        PaneSelectorBox[{
         True -> DynamicModuleBox[{
            CodeInspector`LinterUI`Private`hoverQ$$ = False, 
             CodeInspector`LinterUI`Private`mouseDownQ$$ = False, 
             CodeInspector`LinterUI`Private`fontColor$$}, 
            ButtonBox[
             DynamicWrapperBox[
              TemplateBox[{
                DynamicWrapperBox[
                 StyleBox[
                  PaneBox[
                  "\"Reanalyze Notebook\"", ContentPadding -> True, 
                   FrameMargins -> None, BaselinePosition -> Baseline], 
                  FontColor -> 
                  Dynamic[CodeInspector`LinterUI`Private`fontColor$$], 
                  FontColor -> GrayLevel[0.2], FontFamily -> 
                  "Source Sans Pro", FontWeight -> Plain, FontSize -> 14, 
                  StripOnInput -> False], 
                 CodeInspector`LinterUI`Private`fontColor$$ = Which[
                   TrueQ[
                    Not[
                    
                    OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "ActiveQ"]]], 
                   
                   OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "TextInactiveColor"], 
                   CodeInspector`LinterUI`Private`hoverQ$$, 
                   
                   OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "TextHoverColor"], True, 
                   
                   OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "TextColor"]]], ContentPadding -> False, 
                FrameMargins -> {{9, 9}, {0, 0}}, 
                Alignment -> {Center, Center}, ImageSize -> {Automatic, 19}, 
                RoundingRadius -> 3, FrameStyle -> Dynamic[
                  Directive[
                   AbsoluteThickness[0.5], 
                   Which[
                    TrueQ[
                    Not[
                    
                    OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "ActiveQ"]]], 
                    
                    OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "EdgeInactiveColor"], 
                    CodeInspector`LinterUI`Private`hoverQ$$, 
                    
                    OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "EdgeHoverColor"], True, 
                    
                    OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "EdgeColor"]]]], Background -> Dynamic[
                  Which[
                   TrueQ[
                    Not[
                    
                    OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "ActiveQ"]]], 
                   
                   OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "BackInactiveColor"], 
                   And[
                   CodeInspector`LinterUI`Private`hoverQ$$, 
                    CodeInspector`LinterUI`Private`mouseDownQ$$], 
                   
                   OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "BackMouseDownColor"], 
                   CodeInspector`LinterUI`Private`hoverQ$$, 
                   
                   OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "BackHoverColor"], True, 
                   
                   OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "BackColor"]]]}, "Highlighted"], 
              CodeInspector`LinterUI`Private`hoverQ$$ = 
               CurrentValue["MouseOver"]; 
              CodeInspector`LinterUI`Private`mouseDownQ$$ = 
               CurrentValue["MouseButtonTest"]], 
             Appearance -> {
              "Default" -> 
               Image[RawArray["UnsignedInteger8",{{{255, 255, 255, 255}, {0, 
                  0, 0, 255}, {255, 255, 255, 255}}, {{0, 0, 0, 255}, {0, 0, 
                  0, 0}, {0, 0, 0, 255}}, {{255, 255, 255, 255}, {0, 0, 0, 
                  255}, {255, 255, 255, 255}}}], "Byte", ColorSpace -> "RGB", 
                 ImageResolution -> {72, 72}, Interleaving -> True], "Hover" -> 
               Image[RawArray["UnsignedInteger8",{{{255, 255, 255, 255}, {0, 
                  0, 0, 255}, {255, 255, 255, 255}}, {{0, 0, 0, 255}, {0, 0, 
                  0, 0}, {0, 0, 0, 255}}, {{255, 255, 255, 255}, {0, 0, 0, 
                  255}, {255, 255, 255, 255}}}], "Byte", ColorSpace -> "RGB", 
                 ImageResolution -> {72, 72}, Interleaving -> True], 
               "Pressed" -> 
               Image[RawArray["UnsignedInteger8",{{{255, 255, 255, 255}, {0, 
                  0, 0, 255}, {255, 255, 255, 255}}, {{0, 0, 0, 255}, {0, 0, 
                  0, 0}, {0, 0, 0, 255}}, {{255, 255, 255, 255}, {0, 0, 0, 
                  255}, {255, 255, 255, 255}}}], "Byte", ColorSpace -> "RGB", 
                 ImageResolution -> {72, 72}, Interleaving -> True]}, 
             BaselinePosition -> Baseline, 
             ButtonFunction :> (
              If[OptionValue[{
                  ImageSize -> {Automatic, 19}, 
                   FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                   Baseline, Alignment -> {Center, Center}, Method -> 
                   "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                   CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                   "TextHoverColor" -> 
                   CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                   CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                   CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                   "BackHoverColor" -> 
                   CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                   CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                   CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                   CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                   "EdgeHoverColor" -> 
                   CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                   CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, "ActiveQ"] =!= 
                False, 
                CodeInspector`LinterUI`Private`attachAnalysisAction[
                 EvaluationNotebook[]]]; 
              CodeInspector`LinterUI`Private`mouseDownQ$$ = False), 
             ContentPadding -> False, Evaluator -> Automatic, Method -> 
             "Queued"], DynamicModuleValues :> {}], False -> ButtonBox[
            TemplateBox[{
              StyleBox[
              "\"Analyze Notebook\"", FontColor -> GrayLevel[0.2], FontFamily -> 
               "Source Sans Pro", FontWeight -> Plain, FontSize -> 14, 
               StripOnInput -> False], ImageSize -> {Automatic, 19}, 
              FrameMargins -> {{9, 9}, {0, 0}}, BaselinePosition -> Baseline, 
              Alignment -> {Center, Center}, Background -> GrayLevel[1], 
              FrameStyle -> Dynamic[
                If[
                 CurrentValue["MouseOver"], 
                 Hue[0.55, 0.82, 0.87], 
                 GrayLevel[0.8]]]}, "Highlighted"], 
            Appearance -> {
             "Default" -> 
              Image[RawArray["UnsignedInteger8",{{{255, 255, 255, 255}, {0, 0,
                  0, 255}, {255, 255, 255, 255}}, {{0, 0, 0, 255}, {0, 0, 0, 
                 0}, {0, 0, 0, 255}}, {{255, 255, 255, 255}, {0, 0, 0, 255}, {
                 255, 255, 255, 255}}}], "Byte", ColorSpace -> "RGB", 
                ImageResolution -> {72, 72}, Interleaving -> True], "Hover" -> 
              Image[RawArray["UnsignedInteger8",{{{255, 255, 255, 255}, {0, 0,
                  0, 255}, {255, 255, 255, 255}}, {{0, 0, 0, 255}, {0, 0, 0, 
                 0}, {0, 0, 0, 255}}, {{255, 255, 255, 255}, {0, 0, 0, 255}, {
                 255, 255, 255, 255}}}], "Byte", ColorSpace -> "RGB", 
                ImageResolution -> {72, 72}, Interleaving -> True], "Pressed" -> 
              Image[RawArray["UnsignedInteger8",{{{255, 255, 255, 255}, {0, 0,
                  0, 255}, {255, 255, 255, 255}}, {{0, 0, 0, 255}, {0, 0, 0, 
                 0}, {0, 0, 0, 255}}, {{255, 255, 255, 255}, {0, 0, 0, 255}, {
                 255, 255, 255, 255}}}], "Byte", ColorSpace -> "RGB", 
                ImageResolution -> {72, 72}, Interleaving -> True]}, 
            ButtonFunction :> (CurrentValue[
                EvaluationNotebook[], DockedCells] = 
              With[{LinterUIDockedCell`Private`dockedCells = CurrentValue[
                   EvaluationNotebook[], DockedCells]}, 
                Pick[LinterUIDockedCell`Private`dockedCells, 
                 Map[Quiet[
                    Options[#, CellTags]] =!= {
                   CellTags -> "CodeAnalysisDockedCell"}& , 
                  LinterUIDockedCell`Private`dockedCells]]]; 
             Needs["CodeInspector`"]; 
             CodeInspector`AttachAnalysis[
              LinterUIDockedCell`Private`notebook$$]), Evaluator -> Automatic,
             Method -> "Queued"]}, 
         Dynamic[FEPrivate`EvaluatorStatus["Local"]; TrueQ[
            CodeInspector`LinterUI`Private`varValue[
            LinterUIDockedCell`Private`notebook$$, "DockedCellPresentQ"]]], 
         ImageSize -> Automatic], 
        Offset[{-26, 0}, {1, 0}], {1, 0}], 
       TagBox[
        TagBox[
         TooltipBox[{{
            GrayLevel[0.6], 
            DiskBox[
             Offset[{-11, 0}, {1, 0}], 
             Offset[6]]}, {
            GrayLevel[0.97], 
            AbsoluteThickness[1.5], 
            CapForm["Round"], 
            LineBox[{{
               Offset[{-13, 2}, {1, 0}], 
               Offset[{-9, -2}, {1, 0}]}, {
               Offset[{-13, -2}, {1, 0}], 
               Offset[{-9, 2}, {1, 0}]}}]}}, "\"Close analysis\"", 
          TooltipDelay -> 0, TooltipStyle -> "TextStyling"], 
         Annotation[#, "Close analysis", "Tooltip"]& ], 
        EventHandlerTag[{"MouseClicked" :> (Map[NotebookDelete, 
             Flatten[
              CodeInspector`LinterUI`Private`varValue[
              LinterUIDockedCell`Private`notebook$$, All, 
               "UIAttachedCells"]]]; Map[NotebookDelete, 
             Flatten[
              CodeInspector`LinterUI`Private`varValue[
              LinterUIDockedCell`Private`notebook$$, All, 
               "CleanCellBracketMarker"]]]; CurrentValue[
              EvaluationNotebook[], DockedCells] = 
            With[{LinterUIDockedCell`Private`dockedCells = CurrentValue[
                 EvaluationNotebook[], DockedCells]}, 
              Pick[LinterUIDockedCell`Private`dockedCells, 
               Map[Quiet[
                  Options[#, CellTags]] =!= {
                 CellTags -> "CodeAnalysisDockedCell"}& , 
                LinterUIDockedCell`Private`dockedCells]]]; 
           CodeInspector`LinterUI`Private`applyToVar[Remove, {
              EvaluationNotebook[], All}]; 
           CodeInspector`LinterUI`Private`varSet[{
             LinterUIDockedCell`Private`notebook$$, "DockedCellPresentQ"}, 
             False]), Method -> "Preemptive", PassEventsDown -> Automatic, 
          PassEventsUp -> True}]]}, AspectRatio -> Full, 
      ImageSize -> {Full, 23}, PlotRange -> {{-1, 1}, {-1, 1}}], 
     Deinitialization :> 
     CodeInspector`LinterUI`Private`varSet[{
       LinterUIDockedCell`Private`notebook$$, "DockedCellPresentQ"}, False], 
     DynamicModuleValues :> {}, 
     Initialization :> ({
       LinterUIDockedCell`Private`dockedCellSeverityCountsButton[
          Pattern[LinterUIDockedCell`Private`notebook, 
           Blank[NotebookObject]]] := 
        With[{LinterUIDockedCell`Private`formatIcon = 
           Show[#, ImageSize -> {13, 9}, BaselinePosition -> Scaled[-0.2]]& }, 
          ActionMenu[
           Highlighted[
            Row[{
              CodeInspector`LinterUI`Private`lintSeverityCountsIconRow[
              LinterUIDockedCell`Private`notebook, "exclamSize" -> 12, 
               FontSize -> 14, FontWeight -> Plain], 
              Spacer[2], 
              LinterUIDockedCell`Private`formatIcon[
               CodeInspector`LinterUI`Private`iconData["DownChevron"][
                CodeInspector`LinterUI`Private`colorData["UIDark"]]]}], 
            ImageSize -> {Automatic, 19}, BaselinePosition -> Baseline, 
            Background -> White, Frame -> True, FrameStyle -> Dynamic[
              If[
               CurrentValue["MouseOver"], 
               Hue[0.55, 0.82, 0.87], 
               GrayLevel[0.8]]], FrameMargins -> {6 {1, 1}, {1, 1}}, 
            Alignment -> {Center, Baseline}], 
           Map[
           LinterUIDockedCell`Private`dockedCellMenuItem[
            LinterUIDockedCell`Private`notebook, #]& , 
            CodeInspector`LinterUI`Private`varValue[
            LinterUIDockedCell`Private`notebook, All, "Cell"]], Appearance -> 
           None]], LinterUIDockedCell`Private`dockedCellMenuItem[
          Pattern[LinterUIDockedCell`Private`notebook, 
           Blank[NotebookObject]], 
          Pattern[LinterUIDockedCell`Private`cell, 
           Blank[CellObject]]] := With[{}, Graphics[{
             Inset[
              With[{LinterUIDockedCell`Private`expressionString = First[
                  FrontEndExecute[
                   FrontEnd`ExportPacket[
                    First[
                    CodeInspector`LinterUI`Private`varValue[
                    LinterUIDockedCell`Private`notebook, 
                    LinterUIDockedCell`Private`cell, "CellContents"]], 
                    "InputText"]]]}, {
               LinterUIDockedCell`Private`noLineBreaks = 
                StringReplace[
                 LinterUIDockedCell`Private`expressionString, "\n" -> " "]}, {
               LinterUIDockedCell`Private`previewString = 
                StringTake[LinterUIDockedCell`Private`noLineBreaks, {1, 
                   UpTo[LinterUIDockedCell`Private`$previewLength]}]}, 
               CodeInspector`LinterUI`Private`styleData["FixedWidth"][
                If[
                StringLength[LinterUIDockedCell`Private`expressionString] > 
                 LinterUIDockedCell`Private`$previewLength, 
                 StringDrop[LinterUIDockedCell`Private`previewString, -1] <> 
                 "\[Ellipsis]", 
                 LinterUIDockedCell`Private`previewString]]], {-1, 0}, {-1, 
              0}], 
             Inset[
              CodeInspector`LinterUI`Private`lintSeverityCountsIconRow[
              LinterUIDockedCell`Private`cell], {1, 0}, {1, 0}]}, 
            ImageSize -> {300, 25}, AspectRatio -> Full, 
            PlotRange -> {{-1, 1}, {-1, 1}}, ImagePadding -> None] :> (
           SelectionMove[LinterUIDockedCell`Private`cell, All, Cell]; 
           With[{
             LinterUIDockedCell`Private`nb = 
              ParentNotebook[LinterUIDockedCell`Private`cell]}, 
             FrontEndExecute[
              FrontEnd`FrontEndToken[
              LinterUIDockedCell`Private`nb, "OpenSelectionParents"]]]; 
           SelectionMove[LinterUIDockedCell`Private`cell, After, Cell])], 
        LinterUIDockedCell`Private`$previewLength = 28, 
        CodeInspector`LinterUI`Private`applyToVar[
          Pattern[CodeInspector`LinterUI`Private`function, 
           Blank[]], {
           Pattern[CodeInspector`LinterUI`Private`notebook, 
            Blank[NotebookObject]], All, 
           Pattern[CodeInspector`LinterUI`Private`name, 
            Blank[String]]}, 
          Pattern[CodeInspector`LinterUI`Private`args, 
           BlankNullSequence[]]] := 
        Map[Apply[CodeInspector`LinterUI`Private`function, 
           Join[
            ToHeldExpression[#], 
            Hold[CodeInspector`LinterUI`Private`args]]]& , 
          
          Names[(CodeInspector`LinterUI`Private`varNameString[
             CodeInspector`LinterUI`Private`notebook] <> "*") <> 
           CodeInspector`LinterUI`Private`name]], Null, 
        CodeInspector`LinterUI`Private`applyToVar[
          Pattern[CodeInspector`LinterUI`Private`function, 
           Blank[]], {
           Pattern[CodeInspector`LinterUI`Private`nameArguments, 
            BlankSequence[]], 
           Pattern[CodeInspector`LinterUI`Private`name, 
            Blank[String]]}, 
          Pattern[CodeInspector`LinterUI`Private`args, 
           BlankNullSequence[]]] := 
        Apply[CodeInspector`LinterUI`Private`function, 
          Join[
           ToHeldExpression[
            CodeInspector`LinterUI`Private`varNameString[
            CodeInspector`LinterUI`Private`nameArguments]], 
           Hold[CodeInspector`LinterUI`Private`args]]], Null, 
        CodeInspector`LinterUI`Private`applyToVar[
          Pattern[CodeInspector`LinterUI`Private`function, 
           Blank[]], {
           Pattern[CodeInspector`LinterUI`Private`nameArguments, 
            BlankSequence[]], All}, 
          Pattern[CodeInspector`LinterUI`Private`args, 
           BlankNullSequence[]]] := 
        Map[Apply[CodeInspector`LinterUI`Private`function, 
           Join[
            ToHeldExpression[#], 
            Hold[CodeInspector`LinterUI`Private`args]]]& , 
          Names[
          CodeInspector`LinterUI`Private`varNameString[
            CodeInspector`LinterUI`Private`nameArguments] <> "*"]], 
        CodeInspector`LinterUI`Private`varValue[
          Pattern[CodeInspector`LinterUI`Private`notebook, 
           Blank[NotebookObject]], All, 
          Pattern[CodeInspector`LinterUI`Private`name, 
           Blank[String]]] := Map[Symbol, 
          
          Names[(CodeInspector`LinterUI`Private`varNameString[
             CodeInspector`LinterUI`Private`notebook] <> "*") <> 
           CodeInspector`LinterUI`Private`name]], Null, 
        CodeInspector`LinterUI`Private`varValue[
          Pattern[CodeInspector`LinterUI`Private`nameArguments, 
           BlankSequence[]], 
          Pattern[CodeInspector`LinterUI`Private`name, 
           Blank[String]]] := Symbol[
          CodeInspector`LinterUI`Private`varNameString[
          CodeInspector`LinterUI`Private`nameArguments, 
           CodeInspector`LinterUI`Private`name]], Null, 
        CodeInspector`LinterUI`Private`varValue[
          Pattern[CodeInspector`LinterUI`Private`nameArguments, 
           BlankSequence[]], All] := Map[Symbol, 
          Names[
          CodeInspector`LinterUI`Private`varNameString[
            CodeInspector`LinterUI`Private`nameArguments] <> "*"]], 
        CodeInspector`LinterUI`Private`varSet[{
           Pattern[CodeInspector`LinterUI`Private`nameArguments, 
            BlankSequence[]]}, 
          Pattern[CodeInspector`LinterUI`Private`value, 
           Blank[]]] := Apply[Set, 
          Append[
           ToHeldExpression[
            CodeInspector`LinterUI`Private`varNameString[
            CodeInspector`LinterUI`Private`nameArguments]], 
           CodeInspector`LinterUI`Private`value]], 
        CodeInspector`LinterUI`Private`varNameString[
          Pattern[CodeInspector`LinterUI`Private`notebook, 
           Blank[NotebookObject]]] := ((
           "CodeInspector`LinterUI`Private`Vars`" <> "$$") <> 
          With[{CodeInspector`LinterUI`Private`nbID = 
             Last[CodeInspector`LinterUI`Private`notebook]}, 
            If[
             StringQ[CodeInspector`LinterUI`Private`nbID], 
             StringReplace[CodeInspector`LinterUI`Private`nbID, "-" -> "$"], 
             ToString[CodeInspector`LinterUI`Private`nbID]]]) <> "$$", Null, 
        CodeInspector`LinterUI`Private`varNameString[
          Pattern[CodeInspector`LinterUI`Private`cell, 
           Blank[CellObject]]] := (
          CodeInspector`LinterUI`Private`varNameString[
            Replace[
             ParentNotebook[CodeInspector`LinterUI`Private`cell], $Failed -> 
             EvaluationNotebook[]]] <> 
          With[{CodeInspector`LinterUI`Private`cellID = 
             First[CodeInspector`LinterUI`Private`cell]}, 
            If[
             StringQ[CodeInspector`LinterUI`Private`cellID], 
             StringReplace[CodeInspector`LinterUI`Private`cellID, "-" -> "$"], 
             ToString[CodeInspector`LinterUI`Private`cellID]]]) <> "$$", Null,
         CodeInspector`LinterUI`Private`varNameString[
          Pattern[CodeInspector`LinterUI`Private`notebook, 
           Blank[NotebookObject]], 
          Pattern[CodeInspector`LinterUI`Private`cell, 
           Blank[CellObject]]] := (
          CodeInspector`LinterUI`Private`varNameString[
           CodeInspector`LinterUI`Private`notebook] <> 
          With[{CodeInspector`LinterUI`Private`cellID = 
             First[CodeInspector`LinterUI`Private`cell]}, 
            If[
             StringQ[CodeInspector`LinterUI`Private`cellID], 
             StringReplace[CodeInspector`LinterUI`Private`cellID, "-" -> "$"], 
             ToString[CodeInspector`LinterUI`Private`cellID]]]) <> "$$", Null,
         CodeInspector`LinterUI`Private`varNameString[
          Pattern[CodeInspector`LinterUI`Private`notebook, 
           Blank[NotebookObject]], 
          Pattern[CodeInspector`LinterUI`Private`name, 
           Blank[String]]] := 
        CodeInspector`LinterUI`Private`varNameString[
          CodeInspector`LinterUI`Private`notebook] <> 
         CodeInspector`LinterUI`Private`name, Null, 
        CodeInspector`LinterUI`Private`varNameString[
          Pattern[CodeInspector`LinterUI`Private`cell, 
           Blank[CellObject]], 
          Pattern[CodeInspector`LinterUI`Private`name, 
           Blank[String]]] := 
        CodeInspector`LinterUI`Private`varNameString[
          CodeInspector`LinterUI`Private`cell] <> 
         CodeInspector`LinterUI`Private`name, Null, 
        CodeInspector`LinterUI`Private`varNameString[
          Pattern[CodeInspector`LinterUI`Private`notebook, 
           Blank[NotebookObject]], 
          Pattern[CodeInspector`LinterUI`Private`cell, 
           Blank[CellObject]], 
          Pattern[CodeInspector`LinterUI`Private`name, 
           Blank[String]]] := 
        CodeInspector`LinterUI`Private`varNameString[
          CodeInspector`LinterUI`Private`notebook, 
           CodeInspector`LinterUI`Private`cell] <> 
         CodeInspector`LinterUI`Private`name, Null, 
        CodeInspector`LinterUI`Private`varNameString[
          Pattern[CodeInspector`LinterUI`Private`nameArguments, 
           BlankSequence[]], 
          Pattern[CodeInspector`LinterUI`Private`lint, 
           Blank[CodeInspector`InspectionObject]], 
          Pattern[CodeInspector`LinterUI`Private`name, 
           Blank[String]]] := ((
           CodeInspector`LinterUI`Private`varNameString[
            CodeInspector`LinterUI`Private`nameArguments] <> Apply[Sequence, 
             Riffle[
              Map[StringDelete[
                ToString[#], 
                Alternatives["[", "]", "{", "}", ",", " "]]& , 
               CodeInspector`LinterUI`Private`extractFirstList[
                Last[CodeInspector`LinterUI`Private`lint][
                CodeParser`Source]]], "$"]]) <> "$$") <> 
         CodeInspector`LinterUI`Private`name, 
        CodeInspector`LinterUI`Private`extractFirstList[
          Pattern[CodeInspector`LinterUI`Private`expr, 
           Blank[]]] := FirstCase[CodeInspector`LinterUI`Private`expr, 
          Blank[List], {}, {0, Infinity}]}; 
      LinterUIDockedCell`Private`notebook$$ = EvaluationNotebook[]), 
     UnsavedVariables :> {LinterUIDockedCell`Private`notebook$$}]], 
   CellFrame -> {{0, 0}, {1, 1}}, CellFrameMargins -> {{0, 0}, {0, 0}}, 
   CellFrameColor -> GrayLevel[0.85], Background -> GrayLevel[0.97], CellTags -> 
   "CodeAnalysisDockedCell"]},
TaggingRules-><|"TryRealOnly" -> False|>,
Magnification->1.5,
FrontEndVersion->"13.2 for Mac OS X ARM (64-bit) (January 30, 2023)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"f8810d88-a3a6-446d-ad33-5af63da00185"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 559, 9, 46, "Input",ExpressionUUID->"07b03d69-e629-42fa-ba03-b0c8946b1bf4"],
Cell[CellGroupData[{
Cell[1142, 33, 175, 2, 46, "Input",ExpressionUUID->"6b03e492-9995-459c-b4c1-5cd4b89c307c"],
Cell[1320, 37, 5517, 123, 146, "Output",ExpressionUUID->"70845b86-4e7f-476a-9a96-851bac8c851f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[6874, 165, 16380, 442, 1070, "Input",ExpressionUUID->"a01ba991-b15d-482b-b8ef-b6cf8e12977a"],
Cell[23257, 609, 800, 18, 52, "Output",ExpressionUUID->"489508d7-05fa-4f69-ab5f-a48694c6df2d"],
Cell[24060, 629, 991, 23, 52, "Output",ExpressionUUID->"b4bfdcd3-7cad-4650-9282-fd8e41372bca"],
Cell[25054, 654, 1093, 25, 52, "Output",ExpressionUUID->"152eba67-17a4-4b3d-8160-da83ba5c673a"],
Cell[26150, 681, 3897, 103, 115, "Output",ExpressionUUID->"65122ed1-fa10-4361-8943-a6c9eaf9c94c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[30084, 789, 13101, 379, 915, "Input",ExpressionUUID->"8471a02f-ebab-4ded-a511-e850886279da"],
Cell[43188, 1170, 3568, 64, 55, "Output",ExpressionUUID->"e2ea483c-8d00-460b-a399-5f63093efd2f"],
Cell[46759, 1236, 10092, 247, 277, "Output",ExpressionUUID->"08f344da-2b78-4046-b581-c3b15a56064c"],
Cell[56854, 1485, 3644, 64, 69, "Output",ExpressionUUID->"e1055b32-6f73-4cdd-8ca8-f7be561b5d83"]
}, Open  ]],
Cell[CellGroupData[{
Cell[60535, 1554, 1068, 25, 46, "Input",ExpressionUUID->"236099f9-bb51-4b10-9cb0-a97f475a9b69"],
Cell[61606, 1581, 2943, 59, 102, "Output",ExpressionUUID->"c7edfca7-755a-43db-a561-f07c909e253b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[64586, 1645, 586, 9, 46, "Input",ExpressionUUID->"4a67acdd-b2ff-4bef-8c4c-501bc1039c0d"],
Cell[65175, 1656, 707, 12, 73, "Output",ExpressionUUID->"ed277345-bc23-4230-9ce5-7b86fa9e6e60"]
}, Open  ]],
Cell[CellGroupData[{
Cell[65919, 1673, 252, 4, 46, "Input",ExpressionUUID->"aa3c02b9-3286-4bd5-8caf-06f07883f1c1"],
Cell[66174, 1679, 330, 8, 101, "Output",ExpressionUUID->"4a1deb02-3bdd-4b55-967e-94ca2bb25975"]
}, Open  ]],
Cell[CellGroupData[{
Cell[66541, 1692, 281, 6, 46, "Input",ExpressionUUID->"ca9e4e76-7897-4067-88c1-fe509564c20e"],
Cell[66825, 1700, 1450, 42, 84, "Output",ExpressionUUID->"588b98f3-e603-470f-8b6f-728f42c9b1c8"]
}, Open  ]],
Cell[CellGroupData[{
Cell[68312, 1747, 256, 4, 46, "Input",ExpressionUUID->"d306fbfa-0913-42bd-a086-c80173547b6c"],
Cell[68571, 1753, 5325, 95, 1476, "Output",ExpressionUUID->"432c0645-a60b-4b75-a4a4-0c911651fda1"]
}, Open  ]],
Cell[CellGroupData[{
Cell[73933, 1853, 231, 3, 46, "Input",ExpressionUUID->"0bb806fe-e6d6-4d34-a5a8-8ae93bfb9207"],
Cell[74167, 1858, 570, 12, 128, "Output",ExpressionUUID->"e6b05214-0562-493c-b04c-15c8c82c88c6"]
}, Open  ]]
}
]
*)

